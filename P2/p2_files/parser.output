Terminals unused in grammar

    EH


State 45 conflicts: 1 reduce/reduce


Grammar

    0 $accept: program "end file"

    1 program: globals

    2 globals: globals decl
    3        | ε

    4 decl: varDecl SEMICOL
    5     | classTypeDecl
    6     | fnDecl

    7 fnDecl: id COLON LPAREN maybeformals RPAREN ARROW type LCURLY stmtList RCURLY

    8 varDecl: id COLON type
    9        | id COLON type ASSIGN exp
   10        | id COLON type ASSIGN term

   11 type: datatype
   12     | IMMUTABLE datatype

   13 datatype: REF primType
   14         | primType
   15         | REF id
   16         | id

   17 primType: INT
   18         | BOOL
   19         | VOID

   20 classTypeDecl: id COLON CUSTOM LCURLY classBody RCURLY SEMICOL

   21 classBody: classBody varDecl SEMICOL
   22          | classBody fnDecl
   23          | ε

   24 maybeformals: formalsList
   25             | ε

   26 formalsList: formalDecl
   27            | formalsList COMMA formalDecl

   28 formalDecl: id COLON type

   29 stmtList: stmtList stmt SEMICOL
   30         | stmtList blockStmt
   31         | ε

   32 blockStmt: WHILE LPAREN exp RPAREN LCURLY stmtList RCURLY
   33          | IF LPAREN exp RPAREN LCURLY stmtList RCURLY
   34          | IF LPAREN exp RPAREN LCURLY stmtList RCURLY ELSE LCURLY stmtList RCURLY

   35 stmt: varDecl
   36     | loc ASSIGN exp
   37     | callExp
   38     | loc POSTDEC
   39     | loc POSTINC
   40     | loc MEANS exp OTHERWISE exp
   41     | TOCONSOLE exp
   42     | FROMCONSOLE loc
   43     | RETURN exp
   44     | RETURN

   45 exp: exp DASH exp
   46    | exp CROSS exp
   47    | exp STAR exp
   48    | exp SLASH exp
   49    | exp AND exp
   50    | exp OR exp
   51    | exp EQUALS exp
   52    | exp NOTEQUALS exp
   53    | exp GREATER exp
   54    | exp GREATEREQ exp
   55    | exp LESS exp
   56    | exp LESSEQ exp
   57    | NOT exp
   58    | DASH term
   59    | term

   60 callExp: loc LPAREN RPAREN
   61        | loc LPAREN actualsList RPAREN

   62 actualsList: exp
   63            | actualsList COMMA exp

   64 term: loc
   65     | INTLITERAL
   66     | STRINGLITERAL
   67     | TRUE
   68     | FALSE
   69     | LPAREN exp RPAREN
   70     | callExp

   71 loc: id
   72    | loc ARROW id

   73 id: ID


Terminals, with rules where they appear

    "end file" (0) 0
    error (256)
    AND <a_lang::Token *> (258) 49
    ASSIGN <a_lang::Token *> (259) 9 10 36
    ARROW <a_lang::Token *> (260) 7 72
    BOOL <a_lang::Token *> (261) 18
    COLON <a_lang::Token *> (262) 7 8 9 10 20 28
    COMMA <a_lang::Token *> (263) 27 63
    CUSTOM <a_lang::Token *> (264) 20
    DASH <a_lang::Token *> (265) 45 58
    ELSE <a_lang::Token *> (266) 34
    EH <a_lang::Token *> (267)
    EQUALS <a_lang::Token *> (268) 51
    FALSE <a_lang::Token *> (269) 68
    FROMCONSOLE <a_lang::Token *> (270) 42
    GREATER <a_lang::Token *> (271) 53
    GREATEREQ <a_lang::Token *> (272) 54
    ID <a_lang::IDToken *> (273) 73
    IF <a_lang::Token *> (274) 33 34
    INT <a_lang::Token *> (275) 17
    INTLITERAL <a_lang::IntLitToken *> (276) 65
    IMMUTABLE <a_lang::Token *> (277) 12
    LCURLY <a_lang::Token *> (278) 7 20 32 33 34
    LESS <a_lang::Token *> (279) 55
    LESSEQ <a_lang::Token *> (280) 56
    LPAREN <a_lang::Token *> (281) 7 32 33 34 60 61 69
    MEANS <a_lang::Token *> (282) 40
    NOT <a_lang::Token *> (283) 57
    NOTEQUALS <a_lang::Token *> (284) 52
    OR <a_lang::Token *> (285) 50
    OTHERWISE <a_lang::Token *> (286) 40
    CROSS <a_lang::Token *> (287) 46
    POSTDEC <a_lang::Token *> (288) 38
    POSTINC <a_lang::Token *> (289) 39
    RETURN <a_lang::Token *> (290) 43 44
    RCURLY <a_lang::Token *> (291) 7 20 32 33 34
    REF <a_lang::Token *> (292) 13 15
    RPAREN <a_lang::Token *> (293) 7 32 33 34 60 61 69
    SEMICOL <a_lang::Token *> (294) 4 20 21 29
    SLASH <a_lang::Token *> (295) 48
    STAR <a_lang::Token *> (296) 47
    STRINGLITERAL <a_lang::StrToken *> (297) 66
    TOCONSOLE <a_lang::Token *> (298) 41
    TRUE <a_lang::Token *> (299) 67
    VOID <a_lang::Token *> (300) 19
    WHILE <a_lang::Token *> (301) 32


Nonterminals, with rules where they appear

    $accept (47)
        on left: 0
    program (48)
        on left: 1
        on right: 0
    globals (49)
        on left: 2 3
        on right: 1 2
    decl (50)
        on left: 4 5 6
        on right: 2
    fnDecl (51)
        on left: 7
        on right: 6 22
    varDecl (52)
        on left: 8 9 10
        on right: 4 21 35
    type (53)
        on left: 11 12
        on right: 7 8 9 10 28
    datatype (54)
        on left: 13 14 15 16
        on right: 11 12
    primType (55)
        on left: 17 18 19
        on right: 13 14
    classTypeDecl (56)
        on left: 20
        on right: 5
    classBody (57)
        on left: 21 22 23
        on right: 20 21 22
    maybeformals (58)
        on left: 24 25
        on right: 7
    formalsList (59)
        on left: 26 27
        on right: 24 27
    formalDecl (60)
        on left: 28
        on right: 26 27
    stmtList (61)
        on left: 29 30 31
        on right: 7 29 30 32 33 34
    blockStmt (62)
        on left: 32 33 34
        on right: 30
    stmt (63)
        on left: 35 36 37 38 39 40 41 42 43 44
        on right: 29
    exp (64)
        on left: 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59
        on right: 9 32 33 34 36 40 41 43 45 46 47 48 49 50 51 52 53 54 55 56 57 62 63 69
    callExp (65)
        on left: 60 61
        on right: 37 70
    actualsList (66)
        on left: 62 63
        on right: 61 63
    term (67)
        on left: 64 65 66 67 68 69 70
        on right: 10 58 59
    loc (68)
        on left: 71 72
        on right: 36 38 39 40 42 60 61 64 72
    id (69)
        on left: 73
        on right: 7 8 9 10 15 16 20 28 71 72


State 0

    0 $accept: • program "end file"

    $default  reduce using rule 3 (globals)

    program  go to state 1
    globals  go to state 2


State 1

    0 $accept: program • "end file"

    "end file"  shift, and go to state 3


State 2

    1 program: globals •
    2 globals: globals • decl

    ID  shift, and go to state 4

    $default  reduce using rule 1 (program)

    decl           go to state 5
    fnDecl         go to state 6
    varDecl        go to state 7
    classTypeDecl  go to state 8
    id             go to state 9


State 3

    0 $accept: program "end file" •

    $default  accept


State 4

   73 id: ID •

    $default  reduce using rule 73 (id)


State 5

    2 globals: globals decl •

    $default  reduce using rule 2 (globals)


State 6

    6 decl: fnDecl •

    $default  reduce using rule 6 (decl)


State 7

    4 decl: varDecl • SEMICOL

    SEMICOL  shift, and go to state 10


State 8

    5 decl: classTypeDecl •

    $default  reduce using rule 5 (decl)


State 9

    7 fnDecl: id • COLON LPAREN maybeformals RPAREN ARROW type LCURLY stmtList RCURLY
    8 varDecl: id • COLON type
    9        | id • COLON type ASSIGN exp
   10        | id • COLON type ASSIGN term
   20 classTypeDecl: id • COLON CUSTOM LCURLY classBody RCURLY SEMICOL

    COLON  shift, and go to state 11


State 10

    4 decl: varDecl SEMICOL •

    $default  reduce using rule 4 (decl)


State 11

    7 fnDecl: id COLON • LPAREN maybeformals RPAREN ARROW type LCURLY stmtList RCURLY
    8 varDecl: id COLON • type
    9        | id COLON • type ASSIGN exp
   10        | id COLON • type ASSIGN term
   20 classTypeDecl: id COLON • CUSTOM LCURLY classBody RCURLY SEMICOL

    BOOL       shift, and go to state 12
    CUSTOM     shift, and go to state 13
    ID         shift, and go to state 4
    INT        shift, and go to state 14
    IMMUTABLE  shift, and go to state 15
    LPAREN     shift, and go to state 16
    REF        shift, and go to state 17
    VOID       shift, and go to state 18

    type      go to state 19
    datatype  go to state 20
    primType  go to state 21
    id        go to state 22


State 12

   18 primType: BOOL •

    $default  reduce using rule 18 (primType)


State 13

   20 classTypeDecl: id COLON CUSTOM • LCURLY classBody RCURLY SEMICOL

    LCURLY  shift, and go to state 23


State 14

   17 primType: INT •

    $default  reduce using rule 17 (primType)


State 15

   12 type: IMMUTABLE • datatype

    BOOL  shift, and go to state 12
    ID    shift, and go to state 4
    INT   shift, and go to state 14
    REF   shift, and go to state 17
    VOID  shift, and go to state 18

    datatype  go to state 24
    primType  go to state 21
    id        go to state 22


State 16

    7 fnDecl: id COLON LPAREN • maybeformals RPAREN ARROW type LCURLY stmtList RCURLY

    ID  shift, and go to state 4

    $default  reduce using rule 25 (maybeformals)

    maybeformals  go to state 25
    formalsList   go to state 26
    formalDecl    go to state 27
    id            go to state 28


State 17

   13 datatype: REF • primType
   15         | REF • id

    BOOL  shift, and go to state 12
    ID    shift, and go to state 4
    INT   shift, and go to state 14
    VOID  shift, and go to state 18

    primType  go to state 29
    id        go to state 30


State 18

   19 primType: VOID •

    $default  reduce using rule 19 (primType)


State 19

    8 varDecl: id COLON type •
    9        | id COLON type • ASSIGN exp
   10        | id COLON type • ASSIGN term

    ASSIGN  shift, and go to state 31

    $default  reduce using rule 8 (varDecl)


State 20

   11 type: datatype •

    $default  reduce using rule 11 (type)


State 21

   14 datatype: primType •

    $default  reduce using rule 14 (datatype)


State 22

   16 datatype: id •

    $default  reduce using rule 16 (datatype)


State 23

   20 classTypeDecl: id COLON CUSTOM LCURLY • classBody RCURLY SEMICOL

    $default  reduce using rule 23 (classBody)

    classBody  go to state 32


State 24

   12 type: IMMUTABLE datatype •

    $default  reduce using rule 12 (type)


State 25

    7 fnDecl: id COLON LPAREN maybeformals • RPAREN ARROW type LCURLY stmtList RCURLY

    RPAREN  shift, and go to state 33


State 26

   24 maybeformals: formalsList •
   27 formalsList: formalsList • COMMA formalDecl

    COMMA  shift, and go to state 34

    $default  reduce using rule 24 (maybeformals)


State 27

   26 formalsList: formalDecl •

    $default  reduce using rule 26 (formalsList)


State 28

   28 formalDecl: id • COLON type

    COLON  shift, and go to state 35


State 29

   13 datatype: REF primType •

    $default  reduce using rule 13 (datatype)


State 30

   15 datatype: REF id •

    $default  reduce using rule 15 (datatype)


State 31

    9 varDecl: id COLON type ASSIGN • exp
   10        | id COLON type ASSIGN • term

    DASH           shift, and go to state 36
    FALSE          shift, and go to state 37
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 38
    LPAREN         shift, and go to state 39
    NOT            shift, and go to state 40
    STRINGLITERAL  shift, and go to state 41
    TRUE           shift, and go to state 42

    exp      go to state 43
    callExp  go to state 44
    term     go to state 45
    loc      go to state 46
    id       go to state 47


State 32

   20 classTypeDecl: id COLON CUSTOM LCURLY classBody • RCURLY SEMICOL
   21 classBody: classBody • varDecl SEMICOL
   22          | classBody • fnDecl

    ID      shift, and go to state 4
    RCURLY  shift, and go to state 48

    fnDecl   go to state 49
    varDecl  go to state 50
    id       go to state 51


State 33

    7 fnDecl: id COLON LPAREN maybeformals RPAREN • ARROW type LCURLY stmtList RCURLY

    ARROW  shift, and go to state 52


State 34

   27 formalsList: formalsList COMMA • formalDecl

    ID  shift, and go to state 4

    formalDecl  go to state 53
    id          go to state 28


State 35

   28 formalDecl: id COLON • type

    BOOL       shift, and go to state 12
    ID         shift, and go to state 4
    INT        shift, and go to state 14
    IMMUTABLE  shift, and go to state 15
    REF        shift, and go to state 17
    VOID       shift, and go to state 18

    type      go to state 54
    datatype  go to state 20
    primType  go to state 21
    id        go to state 22


State 36

   58 exp: DASH • term

    FALSE          shift, and go to state 37
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 38
    LPAREN         shift, and go to state 39
    STRINGLITERAL  shift, and go to state 41
    TRUE           shift, and go to state 42

    callExp  go to state 44
    term     go to state 55
    loc      go to state 46
    id       go to state 47


State 37

   68 term: FALSE •

    $default  reduce using rule 68 (term)


State 38

   65 term: INTLITERAL •

    $default  reduce using rule 65 (term)


State 39

   69 term: LPAREN • exp RPAREN

    DASH           shift, and go to state 36
    FALSE          shift, and go to state 37
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 38
    LPAREN         shift, and go to state 39
    NOT            shift, and go to state 40
    STRINGLITERAL  shift, and go to state 41
    TRUE           shift, and go to state 42

    exp      go to state 56
    callExp  go to state 44
    term     go to state 57
    loc      go to state 46
    id       go to state 47


State 40

   57 exp: NOT • exp

    DASH           shift, and go to state 36
    FALSE          shift, and go to state 37
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 38
    LPAREN         shift, and go to state 39
    NOT            shift, and go to state 40
    STRINGLITERAL  shift, and go to state 41
    TRUE           shift, and go to state 42

    exp      go to state 58
    callExp  go to state 44
    term     go to state 57
    loc      go to state 46
    id       go to state 47


State 41

   66 term: STRINGLITERAL •

    $default  reduce using rule 66 (term)


State 42

   67 term: TRUE •

    $default  reduce using rule 67 (term)


State 43

    9 varDecl: id COLON type ASSIGN exp •
   45 exp: exp • DASH exp
   46    | exp • CROSS exp
   47    | exp • STAR exp
   48    | exp • SLASH exp
   49    | exp • AND exp
   50    | exp • OR exp
   51    | exp • EQUALS exp
   52    | exp • NOTEQUALS exp
   53    | exp • GREATER exp
   54    | exp • GREATEREQ exp
   55    | exp • LESS exp
   56    | exp • LESSEQ exp

    AND        shift, and go to state 59
    DASH       shift, and go to state 60
    EQUALS     shift, and go to state 61
    GREATER    shift, and go to state 62
    GREATEREQ  shift, and go to state 63
    LESS       shift, and go to state 64
    LESSEQ     shift, and go to state 65
    NOTEQUALS  shift, and go to state 66
    OR         shift, and go to state 67
    CROSS      shift, and go to state 68
    SLASH      shift, and go to state 69
    STAR       shift, and go to state 70

    $default  reduce using rule 9 (varDecl)


State 44

   70 term: callExp •

    $default  reduce using rule 70 (term)


State 45

   10 varDecl: id COLON type ASSIGN term •
   59 exp: term •

    SEMICOL   reduce using rule 10 (varDecl)
    SEMICOL   [reduce using rule 59 (exp)]
    $default  reduce using rule 59 (exp)


State 46

   60 callExp: loc • LPAREN RPAREN
   61        | loc • LPAREN actualsList RPAREN
   64 term: loc •
   72 loc: loc • ARROW id

    ARROW   shift, and go to state 71
    LPAREN  shift, and go to state 72

    $default  reduce using rule 64 (term)


State 47

   71 loc: id •

    $default  reduce using rule 71 (loc)


State 48

   20 classTypeDecl: id COLON CUSTOM LCURLY classBody RCURLY • SEMICOL

    SEMICOL  shift, and go to state 73


State 49

   22 classBody: classBody fnDecl •

    $default  reduce using rule 22 (classBody)


State 50

   21 classBody: classBody varDecl • SEMICOL

    SEMICOL  shift, and go to state 74


State 51

    7 fnDecl: id • COLON LPAREN maybeformals RPAREN ARROW type LCURLY stmtList RCURLY
    8 varDecl: id • COLON type
    9        | id • COLON type ASSIGN exp
   10        | id • COLON type ASSIGN term

    COLON  shift, and go to state 75


State 52

    7 fnDecl: id COLON LPAREN maybeformals RPAREN ARROW • type LCURLY stmtList RCURLY

    BOOL       shift, and go to state 12
    ID         shift, and go to state 4
    INT        shift, and go to state 14
    IMMUTABLE  shift, and go to state 15
    REF        shift, and go to state 17
    VOID       shift, and go to state 18

    type      go to state 76
    datatype  go to state 20
    primType  go to state 21
    id        go to state 22


State 53

   27 formalsList: formalsList COMMA formalDecl •

    $default  reduce using rule 27 (formalsList)


State 54

   28 formalDecl: id COLON type •

    $default  reduce using rule 28 (formalDecl)


State 55

   58 exp: DASH term •

    $default  reduce using rule 58 (exp)


State 56

   45 exp: exp • DASH exp
   46    | exp • CROSS exp
   47    | exp • STAR exp
   48    | exp • SLASH exp
   49    | exp • AND exp
   50    | exp • OR exp
   51    | exp • EQUALS exp
   52    | exp • NOTEQUALS exp
   53    | exp • GREATER exp
   54    | exp • GREATEREQ exp
   55    | exp • LESS exp
   56    | exp • LESSEQ exp
   69 term: LPAREN exp • RPAREN

    AND        shift, and go to state 59
    DASH       shift, and go to state 60
    EQUALS     shift, and go to state 61
    GREATER    shift, and go to state 62
    GREATEREQ  shift, and go to state 63
    LESS       shift, and go to state 64
    LESSEQ     shift, and go to state 65
    NOTEQUALS  shift, and go to state 66
    OR         shift, and go to state 67
    CROSS      shift, and go to state 68
    RPAREN     shift, and go to state 77
    SLASH      shift, and go to state 69
    STAR       shift, and go to state 70


State 57

   59 exp: term •

    $default  reduce using rule 59 (exp)


State 58

   45 exp: exp • DASH exp
   46    | exp • CROSS exp
   47    | exp • STAR exp
   48    | exp • SLASH exp
   49    | exp • AND exp
   50    | exp • OR exp
   51    | exp • EQUALS exp
   52    | exp • NOTEQUALS exp
   53    | exp • GREATER exp
   54    | exp • GREATEREQ exp
   55    | exp • LESS exp
   56    | exp • LESSEQ exp
   57    | NOT exp •

    $default  reduce using rule 57 (exp)


State 59

   49 exp: exp AND • exp

    DASH           shift, and go to state 36
    FALSE          shift, and go to state 37
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 38
    LPAREN         shift, and go to state 39
    NOT            shift, and go to state 40
    STRINGLITERAL  shift, and go to state 41
    TRUE           shift, and go to state 42

    exp      go to state 78
    callExp  go to state 44
    term     go to state 57
    loc      go to state 46
    id       go to state 47


State 60

   45 exp: exp DASH • exp

    DASH           shift, and go to state 36
    FALSE          shift, and go to state 37
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 38
    LPAREN         shift, and go to state 39
    NOT            shift, and go to state 40
    STRINGLITERAL  shift, and go to state 41
    TRUE           shift, and go to state 42

    exp      go to state 79
    callExp  go to state 44
    term     go to state 57
    loc      go to state 46
    id       go to state 47


State 61

   51 exp: exp EQUALS • exp

    DASH           shift, and go to state 36
    FALSE          shift, and go to state 37
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 38
    LPAREN         shift, and go to state 39
    NOT            shift, and go to state 40
    STRINGLITERAL  shift, and go to state 41
    TRUE           shift, and go to state 42

    exp      go to state 80
    callExp  go to state 44
    term     go to state 57
    loc      go to state 46
    id       go to state 47


State 62

   53 exp: exp GREATER • exp

    DASH           shift, and go to state 36
    FALSE          shift, and go to state 37
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 38
    LPAREN         shift, and go to state 39
    NOT            shift, and go to state 40
    STRINGLITERAL  shift, and go to state 41
    TRUE           shift, and go to state 42

    exp      go to state 81
    callExp  go to state 44
    term     go to state 57
    loc      go to state 46
    id       go to state 47


State 63

   54 exp: exp GREATEREQ • exp

    DASH           shift, and go to state 36
    FALSE          shift, and go to state 37
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 38
    LPAREN         shift, and go to state 39
    NOT            shift, and go to state 40
    STRINGLITERAL  shift, and go to state 41
    TRUE           shift, and go to state 42

    exp      go to state 82
    callExp  go to state 44
    term     go to state 57
    loc      go to state 46
    id       go to state 47


State 64

   55 exp: exp LESS • exp

    DASH           shift, and go to state 36
    FALSE          shift, and go to state 37
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 38
    LPAREN         shift, and go to state 39
    NOT            shift, and go to state 40
    STRINGLITERAL  shift, and go to state 41
    TRUE           shift, and go to state 42

    exp      go to state 83
    callExp  go to state 44
    term     go to state 57
    loc      go to state 46
    id       go to state 47


State 65

   56 exp: exp LESSEQ • exp

    DASH           shift, and go to state 36
    FALSE          shift, and go to state 37
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 38
    LPAREN         shift, and go to state 39
    NOT            shift, and go to state 40
    STRINGLITERAL  shift, and go to state 41
    TRUE           shift, and go to state 42

    exp      go to state 84
    callExp  go to state 44
    term     go to state 57
    loc      go to state 46
    id       go to state 47


State 66

   52 exp: exp NOTEQUALS • exp

    DASH           shift, and go to state 36
    FALSE          shift, and go to state 37
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 38
    LPAREN         shift, and go to state 39
    NOT            shift, and go to state 40
    STRINGLITERAL  shift, and go to state 41
    TRUE           shift, and go to state 42

    exp      go to state 85
    callExp  go to state 44
    term     go to state 57
    loc      go to state 46
    id       go to state 47


State 67

   50 exp: exp OR • exp

    DASH           shift, and go to state 36
    FALSE          shift, and go to state 37
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 38
    LPAREN         shift, and go to state 39
    NOT            shift, and go to state 40
    STRINGLITERAL  shift, and go to state 41
    TRUE           shift, and go to state 42

    exp      go to state 86
    callExp  go to state 44
    term     go to state 57
    loc      go to state 46
    id       go to state 47


State 68

   46 exp: exp CROSS • exp

    DASH           shift, and go to state 36
    FALSE          shift, and go to state 37
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 38
    LPAREN         shift, and go to state 39
    NOT            shift, and go to state 40
    STRINGLITERAL  shift, and go to state 41
    TRUE           shift, and go to state 42

    exp      go to state 87
    callExp  go to state 44
    term     go to state 57
    loc      go to state 46
    id       go to state 47


State 69

   48 exp: exp SLASH • exp

    DASH           shift, and go to state 36
    FALSE          shift, and go to state 37
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 38
    LPAREN         shift, and go to state 39
    NOT            shift, and go to state 40
    STRINGLITERAL  shift, and go to state 41
    TRUE           shift, and go to state 42

    exp      go to state 88
    callExp  go to state 44
    term     go to state 57
    loc      go to state 46
    id       go to state 47


State 70

   47 exp: exp STAR • exp

    DASH           shift, and go to state 36
    FALSE          shift, and go to state 37
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 38
    LPAREN         shift, and go to state 39
    NOT            shift, and go to state 40
    STRINGLITERAL  shift, and go to state 41
    TRUE           shift, and go to state 42

    exp      go to state 89
    callExp  go to state 44
    term     go to state 57
    loc      go to state 46
    id       go to state 47


State 71

   72 loc: loc ARROW • id

    ID  shift, and go to state 4

    id  go to state 90


State 72

   60 callExp: loc LPAREN • RPAREN
   61        | loc LPAREN • actualsList RPAREN

    DASH           shift, and go to state 36
    FALSE          shift, and go to state 37
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 38
    LPAREN         shift, and go to state 39
    NOT            shift, and go to state 40
    RPAREN         shift, and go to state 91
    STRINGLITERAL  shift, and go to state 41
    TRUE           shift, and go to state 42

    exp          go to state 92
    callExp      go to state 44
    actualsList  go to state 93
    term         go to state 57
    loc          go to state 46
    id           go to state 47


State 73

   20 classTypeDecl: id COLON CUSTOM LCURLY classBody RCURLY SEMICOL •

    $default  reduce using rule 20 (classTypeDecl)


State 74

   21 classBody: classBody varDecl SEMICOL •

    $default  reduce using rule 21 (classBody)


State 75

    7 fnDecl: id COLON • LPAREN maybeformals RPAREN ARROW type LCURLY stmtList RCURLY
    8 varDecl: id COLON • type
    9        | id COLON • type ASSIGN exp
   10        | id COLON • type ASSIGN term

    BOOL       shift, and go to state 12
    ID         shift, and go to state 4
    INT        shift, and go to state 14
    IMMUTABLE  shift, and go to state 15
    LPAREN     shift, and go to state 16
    REF        shift, and go to state 17
    VOID       shift, and go to state 18

    type      go to state 19
    datatype  go to state 20
    primType  go to state 21
    id        go to state 22


State 76

    7 fnDecl: id COLON LPAREN maybeformals RPAREN ARROW type • LCURLY stmtList RCURLY

    LCURLY  shift, and go to state 94


State 77

   69 term: LPAREN exp RPAREN •

    $default  reduce using rule 69 (term)


State 78

   45 exp: exp • DASH exp
   46    | exp • CROSS exp
   47    | exp • STAR exp
   48    | exp • SLASH exp
   49    | exp • AND exp
   49    | exp AND exp •
   50    | exp • OR exp
   51    | exp • EQUALS exp
   52    | exp • NOTEQUALS exp
   53    | exp • GREATER exp
   54    | exp • GREATEREQ exp
   55    | exp • LESS exp
   56    | exp • LESSEQ exp

    DASH   shift, and go to state 60
    CROSS  shift, and go to state 68
    SLASH  shift, and go to state 69
    STAR   shift, and go to state 70

    $default  reduce using rule 49 (exp)


State 79

   45 exp: exp • DASH exp
   45    | exp DASH exp •
   46    | exp • CROSS exp
   47    | exp • STAR exp
   48    | exp • SLASH exp
   49    | exp • AND exp
   50    | exp • OR exp
   51    | exp • EQUALS exp
   52    | exp • NOTEQUALS exp
   53    | exp • GREATER exp
   54    | exp • GREATEREQ exp
   55    | exp • LESS exp
   56    | exp • LESSEQ exp

    $default  reduce using rule 45 (exp)


State 80

   45 exp: exp • DASH exp
   46    | exp • CROSS exp
   47    | exp • STAR exp
   48    | exp • SLASH exp
   49    | exp • AND exp
   50    | exp • OR exp
   51    | exp • EQUALS exp
   51    | exp EQUALS exp •
   52    | exp • NOTEQUALS exp
   53    | exp • GREATER exp
   54    | exp • GREATEREQ exp
   55    | exp • LESS exp
   56    | exp • LESSEQ exp

    DASH   shift, and go to state 60
    CROSS  shift, and go to state 68
    SLASH  shift, and go to state 69
    STAR   shift, and go to state 70

    $default  reduce using rule 51 (exp)


State 81

   45 exp: exp • DASH exp
   46    | exp • CROSS exp
   47    | exp • STAR exp
   48    | exp • SLASH exp
   49    | exp • AND exp
   50    | exp • OR exp
   51    | exp • EQUALS exp
   52    | exp • NOTEQUALS exp
   53    | exp • GREATER exp
   53    | exp GREATER exp •
   54    | exp • GREATEREQ exp
   55    | exp • LESS exp
   56    | exp • LESSEQ exp

    AND     shift, and go to state 59
    DASH    shift, and go to state 60
    EQUALS  shift, and go to state 61
    OR      shift, and go to state 67
    CROSS   shift, and go to state 68
    SLASH   shift, and go to state 69
    STAR    shift, and go to state 70

    GREATER    error (nonassociative)
    GREATEREQ  error (nonassociative)
    LESS       error (nonassociative)
    LESSEQ     error (nonassociative)
    NOTEQUALS  error (nonassociative)

    $default  reduce using rule 53 (exp)


State 82

   45 exp: exp • DASH exp
   46    | exp • CROSS exp
   47    | exp • STAR exp
   48    | exp • SLASH exp
   49    | exp • AND exp
   50    | exp • OR exp
   51    | exp • EQUALS exp
   52    | exp • NOTEQUALS exp
   53    | exp • GREATER exp
   54    | exp • GREATEREQ exp
   54    | exp GREATEREQ exp •
   55    | exp • LESS exp
   56    | exp • LESSEQ exp

    AND     shift, and go to state 59
    DASH    shift, and go to state 60
    EQUALS  shift, and go to state 61
    OR      shift, and go to state 67
    CROSS   shift, and go to state 68
    SLASH   shift, and go to state 69
    STAR    shift, and go to state 70

    GREATER    error (nonassociative)
    GREATEREQ  error (nonassociative)
    LESS       error (nonassociative)
    LESSEQ     error (nonassociative)
    NOTEQUALS  error (nonassociative)

    $default  reduce using rule 54 (exp)


State 83

   45 exp: exp • DASH exp
   46    | exp • CROSS exp
   47    | exp • STAR exp
   48    | exp • SLASH exp
   49    | exp • AND exp
   50    | exp • OR exp
   51    | exp • EQUALS exp
   52    | exp • NOTEQUALS exp
   53    | exp • GREATER exp
   54    | exp • GREATEREQ exp
   55    | exp • LESS exp
   55    | exp LESS exp •
   56    | exp • LESSEQ exp

    AND     shift, and go to state 59
    DASH    shift, and go to state 60
    EQUALS  shift, and go to state 61
    OR      shift, and go to state 67
    CROSS   shift, and go to state 68
    SLASH   shift, and go to state 69
    STAR    shift, and go to state 70

    GREATER    error (nonassociative)
    GREATEREQ  error (nonassociative)
    LESS       error (nonassociative)
    LESSEQ     error (nonassociative)
    NOTEQUALS  error (nonassociative)

    $default  reduce using rule 55 (exp)


State 84

   45 exp: exp • DASH exp
   46    | exp • CROSS exp
   47    | exp • STAR exp
   48    | exp • SLASH exp
   49    | exp • AND exp
   50    | exp • OR exp
   51    | exp • EQUALS exp
   52    | exp • NOTEQUALS exp
   53    | exp • GREATER exp
   54    | exp • GREATEREQ exp
   55    | exp • LESS exp
   56    | exp • LESSEQ exp
   56    | exp LESSEQ exp •

    AND     shift, and go to state 59
    DASH    shift, and go to state 60
    EQUALS  shift, and go to state 61
    OR      shift, and go to state 67
    CROSS   shift, and go to state 68
    SLASH   shift, and go to state 69
    STAR    shift, and go to state 70

    GREATER    error (nonassociative)
    GREATEREQ  error (nonassociative)
    LESS       error (nonassociative)
    LESSEQ     error (nonassociative)
    NOTEQUALS  error (nonassociative)

    $default  reduce using rule 56 (exp)


State 85

   45 exp: exp • DASH exp
   46    | exp • CROSS exp
   47    | exp • STAR exp
   48    | exp • SLASH exp
   49    | exp • AND exp
   50    | exp • OR exp
   51    | exp • EQUALS exp
   52    | exp • NOTEQUALS exp
   52    | exp NOTEQUALS exp •
   53    | exp • GREATER exp
   54    | exp • GREATEREQ exp
   55    | exp • LESS exp
   56    | exp • LESSEQ exp

    AND     shift, and go to state 59
    DASH    shift, and go to state 60
    EQUALS  shift, and go to state 61
    OR      shift, and go to state 67
    CROSS   shift, and go to state 68
    SLASH   shift, and go to state 69
    STAR    shift, and go to state 70

    GREATER    error (nonassociative)
    GREATEREQ  error (nonassociative)
    LESS       error (nonassociative)
    LESSEQ     error (nonassociative)
    NOTEQUALS  error (nonassociative)

    $default  reduce using rule 52 (exp)


State 86

   45 exp: exp • DASH exp
   46    | exp • CROSS exp
   47    | exp • STAR exp
   48    | exp • SLASH exp
   49    | exp • AND exp
   50    | exp • OR exp
   50    | exp OR exp •
   51    | exp • EQUALS exp
   52    | exp • NOTEQUALS exp
   53    | exp • GREATER exp
   54    | exp • GREATEREQ exp
   55    | exp • LESS exp
   56    | exp • LESSEQ exp

    DASH   shift, and go to state 60
    CROSS  shift, and go to state 68
    SLASH  shift, and go to state 69
    STAR   shift, and go to state 70

    $default  reduce using rule 50 (exp)


State 87

   45 exp: exp • DASH exp
   46    | exp • CROSS exp
   46    | exp CROSS exp •
   47    | exp • STAR exp
   48    | exp • SLASH exp
   49    | exp • AND exp
   50    | exp • OR exp
   51    | exp • EQUALS exp
   52    | exp • NOTEQUALS exp
   53    | exp • GREATER exp
   54    | exp • GREATEREQ exp
   55    | exp • LESS exp
   56    | exp • LESSEQ exp

    $default  reduce using rule 46 (exp)


State 88

   45 exp: exp • DASH exp
   46    | exp • CROSS exp
   47    | exp • STAR exp
   48    | exp • SLASH exp
   48    | exp SLASH exp •
   49    | exp • AND exp
   50    | exp • OR exp
   51    | exp • EQUALS exp
   52    | exp • NOTEQUALS exp
   53    | exp • GREATER exp
   54    | exp • GREATEREQ exp
   55    | exp • LESS exp
   56    | exp • LESSEQ exp

    DASH   shift, and go to state 60
    CROSS  shift, and go to state 68

    $default  reduce using rule 48 (exp)


State 89

   45 exp: exp • DASH exp
   46    | exp • CROSS exp
   47    | exp • STAR exp
   47    | exp STAR exp •
   48    | exp • SLASH exp
   49    | exp • AND exp
   50    | exp • OR exp
   51    | exp • EQUALS exp
   52    | exp • NOTEQUALS exp
   53    | exp • GREATER exp
   54    | exp • GREATEREQ exp
   55    | exp • LESS exp
   56    | exp • LESSEQ exp

    DASH   shift, and go to state 60
    CROSS  shift, and go to state 68

    $default  reduce using rule 47 (exp)


State 90

   72 loc: loc ARROW id •

    $default  reduce using rule 72 (loc)


State 91

   60 callExp: loc LPAREN RPAREN •

    $default  reduce using rule 60 (callExp)


State 92

   45 exp: exp • DASH exp
   46    | exp • CROSS exp
   47    | exp • STAR exp
   48    | exp • SLASH exp
   49    | exp • AND exp
   50    | exp • OR exp
   51    | exp • EQUALS exp
   52    | exp • NOTEQUALS exp
   53    | exp • GREATER exp
   54    | exp • GREATEREQ exp
   55    | exp • LESS exp
   56    | exp • LESSEQ exp
   62 actualsList: exp •

    AND        shift, and go to state 59
    DASH       shift, and go to state 60
    EQUALS     shift, and go to state 61
    GREATER    shift, and go to state 62
    GREATEREQ  shift, and go to state 63
    LESS       shift, and go to state 64
    LESSEQ     shift, and go to state 65
    NOTEQUALS  shift, and go to state 66
    OR         shift, and go to state 67
    CROSS      shift, and go to state 68
    SLASH      shift, and go to state 69
    STAR       shift, and go to state 70

    $default  reduce using rule 62 (actualsList)


State 93

   61 callExp: loc LPAREN actualsList • RPAREN
   63 actualsList: actualsList • COMMA exp

    COMMA   shift, and go to state 95
    RPAREN  shift, and go to state 96


State 94

    7 fnDecl: id COLON LPAREN maybeformals RPAREN ARROW type LCURLY • stmtList RCURLY

    $default  reduce using rule 31 (stmtList)

    stmtList  go to state 97


State 95

   63 actualsList: actualsList COMMA • exp

    DASH           shift, and go to state 36
    FALSE          shift, and go to state 37
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 38
    LPAREN         shift, and go to state 39
    NOT            shift, and go to state 40
    STRINGLITERAL  shift, and go to state 41
    TRUE           shift, and go to state 42

    exp      go to state 98
    callExp  go to state 44
    term     go to state 57
    loc      go to state 46
    id       go to state 47


State 96

   61 callExp: loc LPAREN actualsList RPAREN •

    $default  reduce using rule 61 (callExp)


State 97

    7 fnDecl: id COLON LPAREN maybeformals RPAREN ARROW type LCURLY stmtList • RCURLY
   29 stmtList: stmtList • stmt SEMICOL
   30         | stmtList • blockStmt

    FROMCONSOLE  shift, and go to state 99
    ID           shift, and go to state 4
    IF           shift, and go to state 100
    RETURN       shift, and go to state 101
    RCURLY       shift, and go to state 102
    TOCONSOLE    shift, and go to state 103
    WHILE        shift, and go to state 104

    varDecl    go to state 105
    blockStmt  go to state 106
    stmt       go to state 107
    callExp    go to state 108
    loc        go to state 109
    id         go to state 110


State 98

   45 exp: exp • DASH exp
   46    | exp • CROSS exp
   47    | exp • STAR exp
   48    | exp • SLASH exp
   49    | exp • AND exp
   50    | exp • OR exp
   51    | exp • EQUALS exp
   52    | exp • NOTEQUALS exp
   53    | exp • GREATER exp
   54    | exp • GREATEREQ exp
   55    | exp • LESS exp
   56    | exp • LESSEQ exp
   63 actualsList: actualsList COMMA exp •

    AND        shift, and go to state 59
    DASH       shift, and go to state 60
    EQUALS     shift, and go to state 61
    GREATER    shift, and go to state 62
    GREATEREQ  shift, and go to state 63
    LESS       shift, and go to state 64
    LESSEQ     shift, and go to state 65
    NOTEQUALS  shift, and go to state 66
    OR         shift, and go to state 67
    CROSS      shift, and go to state 68
    SLASH      shift, and go to state 69
    STAR       shift, and go to state 70

    $default  reduce using rule 63 (actualsList)


State 99

   42 stmt: FROMCONSOLE • loc

    ID  shift, and go to state 4

    loc  go to state 111
    id   go to state 47


State 100

   33 blockStmt: IF • LPAREN exp RPAREN LCURLY stmtList RCURLY
   34          | IF • LPAREN exp RPAREN LCURLY stmtList RCURLY ELSE LCURLY stmtList RCURLY

    LPAREN  shift, and go to state 112


State 101

   43 stmt: RETURN • exp
   44     | RETURN •

    DASH           shift, and go to state 36
    FALSE          shift, and go to state 37
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 38
    LPAREN         shift, and go to state 39
    NOT            shift, and go to state 40
    STRINGLITERAL  shift, and go to state 41
    TRUE           shift, and go to state 42

    $default  reduce using rule 44 (stmt)

    exp      go to state 113
    callExp  go to state 44
    term     go to state 57
    loc      go to state 46
    id       go to state 47


State 102

    7 fnDecl: id COLON LPAREN maybeformals RPAREN ARROW type LCURLY stmtList RCURLY •

    $default  reduce using rule 7 (fnDecl)


State 103

   41 stmt: TOCONSOLE • exp

    DASH           shift, and go to state 36
    FALSE          shift, and go to state 37
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 38
    LPAREN         shift, and go to state 39
    NOT            shift, and go to state 40
    STRINGLITERAL  shift, and go to state 41
    TRUE           shift, and go to state 42

    exp      go to state 114
    callExp  go to state 44
    term     go to state 57
    loc      go to state 46
    id       go to state 47


State 104

   32 blockStmt: WHILE • LPAREN exp RPAREN LCURLY stmtList RCURLY

    LPAREN  shift, and go to state 115


State 105

   35 stmt: varDecl •

    $default  reduce using rule 35 (stmt)


State 106

   30 stmtList: stmtList blockStmt •

    $default  reduce using rule 30 (stmtList)


State 107

   29 stmtList: stmtList stmt • SEMICOL

    SEMICOL  shift, and go to state 116


State 108

   37 stmt: callExp •

    $default  reduce using rule 37 (stmt)


State 109

   36 stmt: loc • ASSIGN exp
   38     | loc • POSTDEC
   39     | loc • POSTINC
   40     | loc • MEANS exp OTHERWISE exp
   60 callExp: loc • LPAREN RPAREN
   61        | loc • LPAREN actualsList RPAREN
   72 loc: loc • ARROW id

    ASSIGN   shift, and go to state 117
    ARROW    shift, and go to state 71
    LPAREN   shift, and go to state 72
    MEANS    shift, and go to state 118
    POSTDEC  shift, and go to state 119
    POSTINC  shift, and go to state 120


State 110

    8 varDecl: id • COLON type
    9        | id • COLON type ASSIGN exp
   10        | id • COLON type ASSIGN term
   71 loc: id •

    COLON  shift, and go to state 121

    $default  reduce using rule 71 (loc)


State 111

   42 stmt: FROMCONSOLE loc •
   72 loc: loc • ARROW id

    ARROW  shift, and go to state 71

    $default  reduce using rule 42 (stmt)


State 112

   33 blockStmt: IF LPAREN • exp RPAREN LCURLY stmtList RCURLY
   34          | IF LPAREN • exp RPAREN LCURLY stmtList RCURLY ELSE LCURLY stmtList RCURLY

    DASH           shift, and go to state 36
    FALSE          shift, and go to state 37
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 38
    LPAREN         shift, and go to state 39
    NOT            shift, and go to state 40
    STRINGLITERAL  shift, and go to state 41
    TRUE           shift, and go to state 42

    exp      go to state 122
    callExp  go to state 44
    term     go to state 57
    loc      go to state 46
    id       go to state 47


State 113

   43 stmt: RETURN exp •
   45 exp: exp • DASH exp
   46    | exp • CROSS exp
   47    | exp • STAR exp
   48    | exp • SLASH exp
   49    | exp • AND exp
   50    | exp • OR exp
   51    | exp • EQUALS exp
   52    | exp • NOTEQUALS exp
   53    | exp • GREATER exp
   54    | exp • GREATEREQ exp
   55    | exp • LESS exp
   56    | exp • LESSEQ exp

    AND        shift, and go to state 59
    DASH       shift, and go to state 60
    EQUALS     shift, and go to state 61
    GREATER    shift, and go to state 62
    GREATEREQ  shift, and go to state 63
    LESS       shift, and go to state 64
    LESSEQ     shift, and go to state 65
    NOTEQUALS  shift, and go to state 66
    OR         shift, and go to state 67
    CROSS      shift, and go to state 68
    SLASH      shift, and go to state 69
    STAR       shift, and go to state 70

    $default  reduce using rule 43 (stmt)


State 114

   41 stmt: TOCONSOLE exp •
   45 exp: exp • DASH exp
   46    | exp • CROSS exp
   47    | exp • STAR exp
   48    | exp • SLASH exp
   49    | exp • AND exp
   50    | exp • OR exp
   51    | exp • EQUALS exp
   52    | exp • NOTEQUALS exp
   53    | exp • GREATER exp
   54    | exp • GREATEREQ exp
   55    | exp • LESS exp
   56    | exp • LESSEQ exp

    AND        shift, and go to state 59
    DASH       shift, and go to state 60
    EQUALS     shift, and go to state 61
    GREATER    shift, and go to state 62
    GREATEREQ  shift, and go to state 63
    LESS       shift, and go to state 64
    LESSEQ     shift, and go to state 65
    NOTEQUALS  shift, and go to state 66
    OR         shift, and go to state 67
    CROSS      shift, and go to state 68
    SLASH      shift, and go to state 69
    STAR       shift, and go to state 70

    $default  reduce using rule 41 (stmt)


State 115

   32 blockStmt: WHILE LPAREN • exp RPAREN LCURLY stmtList RCURLY

    DASH           shift, and go to state 36
    FALSE          shift, and go to state 37
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 38
    LPAREN         shift, and go to state 39
    NOT            shift, and go to state 40
    STRINGLITERAL  shift, and go to state 41
    TRUE           shift, and go to state 42

    exp      go to state 123
    callExp  go to state 44
    term     go to state 57
    loc      go to state 46
    id       go to state 47


State 116

   29 stmtList: stmtList stmt SEMICOL •

    $default  reduce using rule 29 (stmtList)


State 117

   36 stmt: loc ASSIGN • exp

    DASH           shift, and go to state 36
    FALSE          shift, and go to state 37
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 38
    LPAREN         shift, and go to state 39
    NOT            shift, and go to state 40
    STRINGLITERAL  shift, and go to state 41
    TRUE           shift, and go to state 42

    exp      go to state 124
    callExp  go to state 44
    term     go to state 57
    loc      go to state 46
    id       go to state 47


State 118

   40 stmt: loc MEANS • exp OTHERWISE exp

    DASH           shift, and go to state 36
    FALSE          shift, and go to state 37
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 38
    LPAREN         shift, and go to state 39
    NOT            shift, and go to state 40
    STRINGLITERAL  shift, and go to state 41
    TRUE           shift, and go to state 42

    exp      go to state 125
    callExp  go to state 44
    term     go to state 57
    loc      go to state 46
    id       go to state 47


State 119

   38 stmt: loc POSTDEC •

    $default  reduce using rule 38 (stmt)


State 120

   39 stmt: loc POSTINC •

    $default  reduce using rule 39 (stmt)


State 121

    8 varDecl: id COLON • type
    9        | id COLON • type ASSIGN exp
   10        | id COLON • type ASSIGN term

    BOOL       shift, and go to state 12
    ID         shift, and go to state 4
    INT        shift, and go to state 14
    IMMUTABLE  shift, and go to state 15
    REF        shift, and go to state 17
    VOID       shift, and go to state 18

    type      go to state 19
    datatype  go to state 20
    primType  go to state 21
    id        go to state 22


State 122

   33 blockStmt: IF LPAREN exp • RPAREN LCURLY stmtList RCURLY
   34          | IF LPAREN exp • RPAREN LCURLY stmtList RCURLY ELSE LCURLY stmtList RCURLY
   45 exp: exp • DASH exp
   46    | exp • CROSS exp
   47    | exp • STAR exp
   48    | exp • SLASH exp
   49    | exp • AND exp
   50    | exp • OR exp
   51    | exp • EQUALS exp
   52    | exp • NOTEQUALS exp
   53    | exp • GREATER exp
   54    | exp • GREATEREQ exp
   55    | exp • LESS exp
   56    | exp • LESSEQ exp

    AND        shift, and go to state 59
    DASH       shift, and go to state 60
    EQUALS     shift, and go to state 61
    GREATER    shift, and go to state 62
    GREATEREQ  shift, and go to state 63
    LESS       shift, and go to state 64
    LESSEQ     shift, and go to state 65
    NOTEQUALS  shift, and go to state 66
    OR         shift, and go to state 67
    CROSS      shift, and go to state 68
    RPAREN     shift, and go to state 126
    SLASH      shift, and go to state 69
    STAR       shift, and go to state 70


State 123

   32 blockStmt: WHILE LPAREN exp • RPAREN LCURLY stmtList RCURLY
   45 exp: exp • DASH exp
   46    | exp • CROSS exp
   47    | exp • STAR exp
   48    | exp • SLASH exp
   49    | exp • AND exp
   50    | exp • OR exp
   51    | exp • EQUALS exp
   52    | exp • NOTEQUALS exp
   53    | exp • GREATER exp
   54    | exp • GREATEREQ exp
   55    | exp • LESS exp
   56    | exp • LESSEQ exp

    AND        shift, and go to state 59
    DASH       shift, and go to state 60
    EQUALS     shift, and go to state 61
    GREATER    shift, and go to state 62
    GREATEREQ  shift, and go to state 63
    LESS       shift, and go to state 64
    LESSEQ     shift, and go to state 65
    NOTEQUALS  shift, and go to state 66
    OR         shift, and go to state 67
    CROSS      shift, and go to state 68
    RPAREN     shift, and go to state 127
    SLASH      shift, and go to state 69
    STAR       shift, and go to state 70


State 124

   36 stmt: loc ASSIGN exp •
   45 exp: exp • DASH exp
   46    | exp • CROSS exp
   47    | exp • STAR exp
   48    | exp • SLASH exp
   49    | exp • AND exp
   50    | exp • OR exp
   51    | exp • EQUALS exp
   52    | exp • NOTEQUALS exp
   53    | exp • GREATER exp
   54    | exp • GREATEREQ exp
   55    | exp • LESS exp
   56    | exp • LESSEQ exp

    AND        shift, and go to state 59
    DASH       shift, and go to state 60
    EQUALS     shift, and go to state 61
    GREATER    shift, and go to state 62
    GREATEREQ  shift, and go to state 63
    LESS       shift, and go to state 64
    LESSEQ     shift, and go to state 65
    NOTEQUALS  shift, and go to state 66
    OR         shift, and go to state 67
    CROSS      shift, and go to state 68
    SLASH      shift, and go to state 69
    STAR       shift, and go to state 70

    $default  reduce using rule 36 (stmt)


State 125

   40 stmt: loc MEANS exp • OTHERWISE exp
   45 exp: exp • DASH exp
   46    | exp • CROSS exp
   47    | exp • STAR exp
   48    | exp • SLASH exp
   49    | exp • AND exp
   50    | exp • OR exp
   51    | exp • EQUALS exp
   52    | exp • NOTEQUALS exp
   53    | exp • GREATER exp
   54    | exp • GREATEREQ exp
   55    | exp • LESS exp
   56    | exp • LESSEQ exp

    AND        shift, and go to state 59
    DASH       shift, and go to state 60
    EQUALS     shift, and go to state 61
    GREATER    shift, and go to state 62
    GREATEREQ  shift, and go to state 63
    LESS       shift, and go to state 64
    LESSEQ     shift, and go to state 65
    NOTEQUALS  shift, and go to state 66
    OR         shift, and go to state 67
    OTHERWISE  shift, and go to state 128
    CROSS      shift, and go to state 68
    SLASH      shift, and go to state 69
    STAR       shift, and go to state 70


State 126

   33 blockStmt: IF LPAREN exp RPAREN • LCURLY stmtList RCURLY
   34          | IF LPAREN exp RPAREN • LCURLY stmtList RCURLY ELSE LCURLY stmtList RCURLY

    LCURLY  shift, and go to state 129


State 127

   32 blockStmt: WHILE LPAREN exp RPAREN • LCURLY stmtList RCURLY

    LCURLY  shift, and go to state 130


State 128

   40 stmt: loc MEANS exp OTHERWISE • exp

    DASH           shift, and go to state 36
    FALSE          shift, and go to state 37
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 38
    LPAREN         shift, and go to state 39
    NOT            shift, and go to state 40
    STRINGLITERAL  shift, and go to state 41
    TRUE           shift, and go to state 42

    exp      go to state 131
    callExp  go to state 44
    term     go to state 57
    loc      go to state 46
    id       go to state 47


State 129

   33 blockStmt: IF LPAREN exp RPAREN LCURLY • stmtList RCURLY
   34          | IF LPAREN exp RPAREN LCURLY • stmtList RCURLY ELSE LCURLY stmtList RCURLY

    $default  reduce using rule 31 (stmtList)

    stmtList  go to state 132


State 130

   32 blockStmt: WHILE LPAREN exp RPAREN LCURLY • stmtList RCURLY

    $default  reduce using rule 31 (stmtList)

    stmtList  go to state 133


State 131

   40 stmt: loc MEANS exp OTHERWISE exp •
   45 exp: exp • DASH exp
   46    | exp • CROSS exp
   47    | exp • STAR exp
   48    | exp • SLASH exp
   49    | exp • AND exp
   50    | exp • OR exp
   51    | exp • EQUALS exp
   52    | exp • NOTEQUALS exp
   53    | exp • GREATER exp
   54    | exp • GREATEREQ exp
   55    | exp • LESS exp
   56    | exp • LESSEQ exp

    AND        shift, and go to state 59
    DASH       shift, and go to state 60
    EQUALS     shift, and go to state 61
    GREATER    shift, and go to state 62
    GREATEREQ  shift, and go to state 63
    LESS       shift, and go to state 64
    LESSEQ     shift, and go to state 65
    NOTEQUALS  shift, and go to state 66
    OR         shift, and go to state 67
    CROSS      shift, and go to state 68
    SLASH      shift, and go to state 69
    STAR       shift, and go to state 70

    $default  reduce using rule 40 (stmt)


State 132

   29 stmtList: stmtList • stmt SEMICOL
   30         | stmtList • blockStmt
   33 blockStmt: IF LPAREN exp RPAREN LCURLY stmtList • RCURLY
   34          | IF LPAREN exp RPAREN LCURLY stmtList • RCURLY ELSE LCURLY stmtList RCURLY

    FROMCONSOLE  shift, and go to state 99
    ID           shift, and go to state 4
    IF           shift, and go to state 100
    RETURN       shift, and go to state 101
    RCURLY       shift, and go to state 134
    TOCONSOLE    shift, and go to state 103
    WHILE        shift, and go to state 104

    varDecl    go to state 105
    blockStmt  go to state 106
    stmt       go to state 107
    callExp    go to state 108
    loc        go to state 109
    id         go to state 110


State 133

   29 stmtList: stmtList • stmt SEMICOL
   30         | stmtList • blockStmt
   32 blockStmt: WHILE LPAREN exp RPAREN LCURLY stmtList • RCURLY

    FROMCONSOLE  shift, and go to state 99
    ID           shift, and go to state 4
    IF           shift, and go to state 100
    RETURN       shift, and go to state 101
    RCURLY       shift, and go to state 135
    TOCONSOLE    shift, and go to state 103
    WHILE        shift, and go to state 104

    varDecl    go to state 105
    blockStmt  go to state 106
    stmt       go to state 107
    callExp    go to state 108
    loc        go to state 109
    id         go to state 110


State 134

   33 blockStmt: IF LPAREN exp RPAREN LCURLY stmtList RCURLY •
   34          | IF LPAREN exp RPAREN LCURLY stmtList RCURLY • ELSE LCURLY stmtList RCURLY

    ELSE  shift, and go to state 136

    $default  reduce using rule 33 (blockStmt)


State 135

   32 blockStmt: WHILE LPAREN exp RPAREN LCURLY stmtList RCURLY •

    $default  reduce using rule 32 (blockStmt)


State 136

   34 blockStmt: IF LPAREN exp RPAREN LCURLY stmtList RCURLY ELSE • LCURLY stmtList RCURLY

    LCURLY  shift, and go to state 137


State 137

   34 blockStmt: IF LPAREN exp RPAREN LCURLY stmtList RCURLY ELSE LCURLY • stmtList RCURLY

    $default  reduce using rule 31 (stmtList)

    stmtList  go to state 138


State 138

   29 stmtList: stmtList • stmt SEMICOL
   30         | stmtList • blockStmt
   34 blockStmt: IF LPAREN exp RPAREN LCURLY stmtList RCURLY ELSE LCURLY stmtList • RCURLY

    FROMCONSOLE  shift, and go to state 99
    ID           shift, and go to state 4
    IF           shift, and go to state 100
    RETURN       shift, and go to state 101
    RCURLY       shift, and go to state 139
    TOCONSOLE    shift, and go to state 103
    WHILE        shift, and go to state 104

    varDecl    go to state 105
    blockStmt  go to state 106
    stmt       go to state 107
    callExp    go to state 108
    loc        go to state 109
    id         go to state 110


State 139

   34 blockStmt: IF LPAREN exp RPAREN LCURLY stmtList RCURLY ELSE LCURLY stmtList RCURLY •

    $default  reduce using rule 34 (blockStmt)
