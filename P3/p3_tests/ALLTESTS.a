a : () -> int {
    x: int = 1;
    y: int = 2;
	return x + y;
}

b : () -> int {
    x: int = 1;
    y: int = 2;
	return x - y;
}

c : () -> int {
    x: int = 1;
    y: int = 2;
	return x * y;
}

d : () -> int {
    x: int = 1;
    y: int = 2;
	return x / y;
}

e : () -> bool {
    x: int = 1;
    y: int = 2;
	return x > y;
}

f : () -> bool {
    x: int = 1;
    y: int = 2;
	return x < y;
}

g : () -> bool {
    x: int = 1;
    y: int = 2;
	return x >= y;
}

h : () -> bool {
    x: int = 1;
    y: int = 2;
	return x <= y;
}

i : () -> bool {
    x: int = 1;
    y: int = 2;
	return x == y;
}

j : () -> bool {
    x: int = 1;
    y: int = 2;
	return x != y;
}

k : () -> bool {
    x: bool = true;
    y: bool = false;
	return x and y;
}

l : () -> bool {
    x: bool = true;
    y: bool = false;
	return x or y;
}
a: () -> void {
    if (x > 4) {
        b: int;
    }
}
a : () -> bool {
    x: bool = true;
	return true;
}

b : () -> bool {
    x: bool = true;
	return x;
}
a : () -> int {
    return 1;
}

b : (x: int, y: bool, z: int) -> int {
    return a(x);
}

main : () -> int {
    b(1, true, 2);
    a();
    return b(1, true, 2);
}
m: custom {
    x: int;
    y: int;
    z: int = 1;
    f : () -> void {
        a: int;
        b: int;
        while (true) {
            while (false) {
                while (true) {
                    return;
                }
            }
        }
        if (true) {
            if (false) {
            }
        }
    }
};

a : () -> void {
    if (x > 1) {
        x: SomeClass;
    }
}
a : () -> void {
    toconsole "Hello, World!";
    return;
}
a : () -> int {
    if (eh?) {
        return 1;
    }
    else {
        return 2;
    }
}

a : (x: int, y: int, z: bool) -> void {
    if (x > 1) {
        x: SomeClass;
    }
}
a : () -> int {
    fromconsole x;
    return x;
}
a : () -> void {
}
global1: int;
global2: int;
a : () -> int {
    if (1) {
        return 1;
    } else {
        return 2;
    }
}
a : immutable int;

b : () -> void {
    x: immutable int = 1;
    y: immutable CLASSTYPE;
    return;
}
a : () -> void {
    x: int = 0;
    x++;
    x--;
    return;
}
m: custom {
    x: int;
    y: int;
    z: int = 1;
    f : () -> void {
        a: int;
        b: int;
    }
};

w: custom {
    x: int;
    y: int;
    z: int = 1;
};
main : () -> int {
    maybe (4+1) means (3-1) otherwise 3+2;
    maybe x means y otherwise z;
}
c : custom {
    x: int;
    y: int;
    z: int = 1;
};

a : () -> int {
    c: c;
    c->x = 1;
    return c->x;
}
a : () -> int {
    if (true) {
        if (false) {
            return 1;
        } else {
            return 2;
        }
    } else {
        return 3;
    }

    if (false) {
        if (true) {
            if (false) {
            }
        }
        return 4;
    }
}
a : () -> int {
    while (true) {
        while (false) {
            while (true) {
                return 1;
            }
        }
    }
}
a : () -> bool {
    x: bool = true;
	return !x;
}

b : () -> int {
    x: int = 1;
	return -x;
}
a : () -> int {
    x: int = 1;
    y: int = 2;
	return x + y * 2;
}

b : () -> int {
    x: int = 1;
    y: int = 2;
	return x + (y * 2);
}

c : () -> int {
    x: int = 1;
    y: int = 2;
	return (x + y * 0) * 2;
}

d : () -> int {
    x: int = 1;
    y: int = 2;
	return x + -y;
}

e : () -> int {
    x: int = 1;
    y: int = 2;
	return x + ((!y) and true);
}
main : () -> int {
    a: &int;
    b: &a;
}
a : () -> int {
	return 1;
}

b : () -> void {
    x: int;
    x = 1;
    x = 2;
    n: int = 1;
	return;
}
a : () -> void {
	while (x == 1) {
		a = 1;
	}
}
