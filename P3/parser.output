Grammar

    0 $accept: program "end file"

    1 program: globals

    2 globals: globals decl
    3        | ε

    4 decl: varDecl SEMICOL
    5     | classTypeDecl
    6     | fnDecl

    7 varDecl: name COLON type
    8        | name COLON type ASSIGN exp

    9 type: IMMUTABLE datatype
   10     | datatype

   11 datatype: REF primType
   12         | primType
   13         | REF name
   14         | name

   15 primType: INT
   16         | BOOL
   17         | VOID

   18 classTypeDecl: name COLON CUSTOM LCURLY classBody RCURLY SEMICOL

   19 classBody: classBody varDecl SEMICOL
   20          | classBody fnDecl
   21          | ε

   22 fnDecl: name COLON LPAREN maybeFormals RPAREN ARROW type LCURLY stmtList RCURLY

   23 maybeFormals: ε
   24             | formalList

   25 formalList: formalDecl
   26           | formalList COMMA formalDecl

   27 formalDecl: name COLON type

   28 stmtList: ε
   29         | stmtList stmt SEMICOL
   30         | stmtList blockStmt

   31 blockStmt: WHILE LPAREN exp RPAREN LCURLY stmtList RCURLY
   32          | IF LPAREN exp RPAREN LCURLY stmtList RCURLY
   33          | IF LPAREN exp RPAREN LCURLY stmtList RCURLY ELSE LCURLY stmtList RCURLY

   34 stmt: varDecl
   35     | loc ASSIGN exp
   36     | callExp
   37     | loc POSTDEC
   38     | loc POSTINC
   39     | TOCONSOLE exp
   40     | FROMCONSOLE loc
   41     | MAYBE exp MEANS exp OTHERWISE exp
   42     | RETURN exp
   43     | RETURN

   44 exp: exp DASH exp
   45    | exp CROSS exp
   46    | exp STAR exp
   47    | exp SLASH exp
   48    | exp AND exp
   49    | exp OR exp
   50    | exp EQUALS exp
   51    | exp NOTEQUALS exp
   52    | exp GREATER exp
   53    | exp GREATEREQ exp
   54    | exp LESS exp
   55    | exp LESSEQ exp
   56    | NOT exp
   57    | DASH term
   58    | term

   59 callExp: loc LPAREN RPAREN
   60        | loc LPAREN actualList RPAREN

   61 actualList: exp
   62           | actualList COMMA exp

   63 term: loc
   64     | INTLITERAL
   65     | STRINGLITERAL
   66     | TRUE
   67     | FALSE
   68     | EH
   69     | LPAREN exp RPAREN
   70     | callExp

   71 loc: name
   72    | loc ARROW name

   73 name: ID


Terminals, with rules where they appear

    "end file" (0) 0
    error (256)
    AND <a_lang::Token *> (258) 48
    ASSIGN <a_lang::Token *> (259) 8 35
    ARROW <a_lang::Token *> (260) 22 72
    BOOL <a_lang::Token *> (261) 16
    COLON <a_lang::Token *> (262) 7 8 18 22 27
    COMMA <a_lang::Token *> (263) 26 62
    CUSTOM <a_lang::Token *> (264) 18
    DASH <a_lang::Token *> (265) 44 57
    ELSE <a_lang::Token *> (266) 33
    EH <a_lang::Token *> (267) 68
    EQUALS <a_lang::Token *> (268) 50
    FALSE <a_lang::Token *> (269) 67
    FROMCONSOLE <a_lang::Token *> (270) 40
    GREATER <a_lang::Token *> (271) 52
    GREATEREQ <a_lang::Token *> (272) 53
    ID <a_lang::IDToken *> (273) 73
    IF <a_lang::Token *> (274) 32 33
    INT <a_lang::Token *> (275) 15
    INTLITERAL <a_lang::IntLitToken *> (276) 64
    IMMUTABLE <a_lang::Token *> (277) 9
    LCURLY <a_lang::Token *> (278) 18 22 31 32 33
    LESS <a_lang::Token *> (279) 54
    LESSEQ <a_lang::Token *> (280) 55
    LPAREN <a_lang::Token *> (281) 22 31 32 33 59 60 69
    MAYBE <a_lang::Token *> (282) 41
    MEANS <a_lang::Token *> (283) 41
    NOT <a_lang::Token *> (284) 56
    NOTEQUALS <a_lang::Token *> (285) 51
    OR <a_lang::Token *> (286) 49
    OTHERWISE <a_lang::Token *> (287) 41
    CROSS <a_lang::Token *> (288) 45
    POSTDEC <a_lang::Token *> (289) 37
    POSTINC <a_lang::Token *> (290) 38
    RETURN <a_lang::Token *> (291) 42 43
    RCURLY <a_lang::Token *> (292) 18 22 31 32 33
    REF <a_lang::Token *> (293) 11 13
    RPAREN <a_lang::Token *> (294) 22 31 32 33 59 60 69
    SEMICOL <a_lang::Token *> (295) 4 18 19 29
    SLASH <a_lang::Token *> (296) 47
    STAR <a_lang::Token *> (297) 46
    STRINGLITERAL <a_lang::StrToken *> (298) 65
    TOCONSOLE <a_lang::Token *> (299) 39
    TRUE <a_lang::Token *> (300) 66
    VOID <a_lang::Token *> (301) 17
    WHILE <a_lang::Token *> (302) 31


Nonterminals, with rules where they appear

    $accept (48)
        on left: 0
    program <a_lang::ProgramNode *> (49)
        on left: 1
        on right: 0
    globals <std::list<a_lang::DeclNode *> *> (50)
        on left: 2 3
        on right: 1 2
    decl <a_lang::DeclNode *> (51)
        on left: 4 5 6
        on right: 2
    varDecl <a_lang::VarDeclNode *> (52)
        on left: 7 8
        on right: 4 19 34
    type <a_lang::TypeNode *> (53)
        on left: 9 10
        on right: 7 8 22 27
    datatype <a_lang::TypeNode *> (54)
        on left: 11 12 13 14
        on right: 9 10
    primType <a_lang::TypeNode *> (55)
        on left: 15 16 17
        on right: 11 12
    classTypeDecl <a_lang::ClassDefnNode *> (56)
        on left: 18
        on right: 5
    classBody <std::list<a_lang::DeclNode *> *> (57)
        on left: 19 20 21
        on right: 18 19 20
    fnDecl <a_lang::FnDeclNode *> (58)
        on left: 22
        on right: 6 20
    maybeFormals <std::list<a_lang::FormalDeclNode *> *> (59)
        on left: 23 24
        on right: 22
    formalList <std::list<a_lang::FormalDeclNode *> *> (60)
        on left: 25 26
        on right: 24 26
    formalDecl <a_lang::FormalDeclNode *> (61)
        on left: 27
        on right: 25 26
    stmtList <std::list<a_lang::StmtNode *> *> (62)
        on left: 28 29 30
        on right: 22 29 30 31 32 33
    blockStmt <a_lang::StmtNode *> (63)
        on left: 31 32 33
        on right: 30
    stmt <a_lang::StmtNode *> (64)
        on left: 34 35 36 37 38 39 40 41 42 43
        on right: 29
    exp <a_lang::ExpNode *> (65)
        on left: 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58
        on right: 8 31 32 33 35 39 41 42 44 45 46 47 48 49 50 51 52 53 54 55 56 61 62 69
    callExp <a_lang::CallExpNode *> (66)
        on left: 59 60
        on right: 36 70
    actualList <std::list<a_lang::ExpNode *> *> (67)
        on left: 61 62
        on right: 60 62
    term <a_lang::ExpNode *> (68)
        on left: 63 64 65 66 67 68 69 70
        on right: 57 58
    loc <a_lang::LocNode *> (69)
        on left: 71 72
        on right: 35 37 38 40 59 60 63 72
    name <a_lang::IDNode *> (70)
        on left: 73
        on right: 7 8 13 14 18 22 27 71 72


State 0

    0 $accept: • program "end file"

    $default  reduce using rule 3 (globals)

    program  go to state 1
    globals  go to state 2


State 1

    0 $accept: program • "end file"

    "end file"  shift, and go to state 3


State 2

    1 program: globals •
    2 globals: globals • decl

    ID  shift, and go to state 4

    $default  reduce using rule 1 (program)

    decl           go to state 5
    varDecl        go to state 6
    classTypeDecl  go to state 7
    fnDecl         go to state 8
    name           go to state 9


State 3

    0 $accept: program "end file" •

    $default  accept


State 4

   73 name: ID •

    $default  reduce using rule 73 (name)


State 5

    2 globals: globals decl •

    $default  reduce using rule 2 (globals)


State 6

    4 decl: varDecl • SEMICOL

    SEMICOL  shift, and go to state 10


State 7

    5 decl: classTypeDecl •

    $default  reduce using rule 5 (decl)


State 8

    6 decl: fnDecl •

    $default  reduce using rule 6 (decl)


State 9

    7 varDecl: name • COLON type
    8        | name • COLON type ASSIGN exp
   18 classTypeDecl: name • COLON CUSTOM LCURLY classBody RCURLY SEMICOL
   22 fnDecl: name • COLON LPAREN maybeFormals RPAREN ARROW type LCURLY stmtList RCURLY

    COLON  shift, and go to state 11


State 10

    4 decl: varDecl SEMICOL •

    $default  reduce using rule 4 (decl)


State 11

    7 varDecl: name COLON • type
    8        | name COLON • type ASSIGN exp
   18 classTypeDecl: name COLON • CUSTOM LCURLY classBody RCURLY SEMICOL
   22 fnDecl: name COLON • LPAREN maybeFormals RPAREN ARROW type LCURLY stmtList RCURLY

    BOOL       shift, and go to state 12
    CUSTOM     shift, and go to state 13
    ID         shift, and go to state 4
    INT        shift, and go to state 14
    IMMUTABLE  shift, and go to state 15
    LPAREN     shift, and go to state 16
    REF        shift, and go to state 17
    VOID       shift, and go to state 18

    type      go to state 19
    datatype  go to state 20
    primType  go to state 21
    name      go to state 22


State 12

   16 primType: BOOL •

    $default  reduce using rule 16 (primType)


State 13

   18 classTypeDecl: name COLON CUSTOM • LCURLY classBody RCURLY SEMICOL

    LCURLY  shift, and go to state 23


State 14

   15 primType: INT •

    $default  reduce using rule 15 (primType)


State 15

    9 type: IMMUTABLE • datatype

    BOOL  shift, and go to state 12
    ID    shift, and go to state 4
    INT   shift, and go to state 14
    REF   shift, and go to state 17
    VOID  shift, and go to state 18

    datatype  go to state 24
    primType  go to state 21
    name      go to state 22


State 16

   22 fnDecl: name COLON LPAREN • maybeFormals RPAREN ARROW type LCURLY stmtList RCURLY

    ID  shift, and go to state 4

    $default  reduce using rule 23 (maybeFormals)

    maybeFormals  go to state 25
    formalList    go to state 26
    formalDecl    go to state 27
    name          go to state 28


State 17

   11 datatype: REF • primType
   13         | REF • name

    BOOL  shift, and go to state 12
    ID    shift, and go to state 4
    INT   shift, and go to state 14
    VOID  shift, and go to state 18

    primType  go to state 29
    name      go to state 30


State 18

   17 primType: VOID •

    $default  reduce using rule 17 (primType)


State 19

    7 varDecl: name COLON type •
    8        | name COLON type • ASSIGN exp

    ASSIGN  shift, and go to state 31

    $default  reduce using rule 7 (varDecl)


State 20

   10 type: datatype •

    $default  reduce using rule 10 (type)


State 21

   12 datatype: primType •

    $default  reduce using rule 12 (datatype)


State 22

   14 datatype: name •

    $default  reduce using rule 14 (datatype)


State 23

   18 classTypeDecl: name COLON CUSTOM LCURLY • classBody RCURLY SEMICOL

    $default  reduce using rule 21 (classBody)

    classBody  go to state 32


State 24

    9 type: IMMUTABLE datatype •

    $default  reduce using rule 9 (type)


State 25

   22 fnDecl: name COLON LPAREN maybeFormals • RPAREN ARROW type LCURLY stmtList RCURLY

    RPAREN  shift, and go to state 33


State 26

   24 maybeFormals: formalList •
   26 formalList: formalList • COMMA formalDecl

    COMMA  shift, and go to state 34

    $default  reduce using rule 24 (maybeFormals)


State 27

   25 formalList: formalDecl •

    $default  reduce using rule 25 (formalList)


State 28

   27 formalDecl: name • COLON type

    COLON  shift, and go to state 35


State 29

   11 datatype: REF primType •

    $default  reduce using rule 11 (datatype)


State 30

   13 datatype: REF name •

    $default  reduce using rule 13 (datatype)


State 31

    8 varDecl: name COLON type ASSIGN • exp

    DASH           shift, and go to state 36
    EH             shift, and go to state 37
    FALSE          shift, and go to state 38
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 39
    LPAREN         shift, and go to state 40
    NOT            shift, and go to state 41
    STRINGLITERAL  shift, and go to state 42
    TRUE           shift, and go to state 43

    exp      go to state 44
    callExp  go to state 45
    term     go to state 46
    loc      go to state 47
    name     go to state 48


State 32

   18 classTypeDecl: name COLON CUSTOM LCURLY classBody • RCURLY SEMICOL
   19 classBody: classBody • varDecl SEMICOL
   20          | classBody • fnDecl

    ID      shift, and go to state 4
    RCURLY  shift, and go to state 49

    varDecl  go to state 50
    fnDecl   go to state 51
    name     go to state 52


State 33

   22 fnDecl: name COLON LPAREN maybeFormals RPAREN • ARROW type LCURLY stmtList RCURLY

    ARROW  shift, and go to state 53


State 34

   26 formalList: formalList COMMA • formalDecl

    ID  shift, and go to state 4

    formalDecl  go to state 54
    name        go to state 28


State 35

   27 formalDecl: name COLON • type

    BOOL       shift, and go to state 12
    ID         shift, and go to state 4
    INT        shift, and go to state 14
    IMMUTABLE  shift, and go to state 15
    REF        shift, and go to state 17
    VOID       shift, and go to state 18

    type      go to state 55
    datatype  go to state 20
    primType  go to state 21
    name      go to state 22


State 36

   57 exp: DASH • term

    EH             shift, and go to state 37
    FALSE          shift, and go to state 38
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 39
    LPAREN         shift, and go to state 40
    STRINGLITERAL  shift, and go to state 42
    TRUE           shift, and go to state 43

    callExp  go to state 45
    term     go to state 56
    loc      go to state 47
    name     go to state 48


State 37

   68 term: EH •

    $default  reduce using rule 68 (term)


State 38

   67 term: FALSE •

    $default  reduce using rule 67 (term)


State 39

   64 term: INTLITERAL •

    $default  reduce using rule 64 (term)


State 40

   69 term: LPAREN • exp RPAREN

    DASH           shift, and go to state 36
    EH             shift, and go to state 37
    FALSE          shift, and go to state 38
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 39
    LPAREN         shift, and go to state 40
    NOT            shift, and go to state 41
    STRINGLITERAL  shift, and go to state 42
    TRUE           shift, and go to state 43

    exp      go to state 57
    callExp  go to state 45
    term     go to state 46
    loc      go to state 47
    name     go to state 48


State 41

   56 exp: NOT • exp

    DASH           shift, and go to state 36
    EH             shift, and go to state 37
    FALSE          shift, and go to state 38
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 39
    LPAREN         shift, and go to state 40
    NOT            shift, and go to state 41
    STRINGLITERAL  shift, and go to state 42
    TRUE           shift, and go to state 43

    exp      go to state 58
    callExp  go to state 45
    term     go to state 46
    loc      go to state 47
    name     go to state 48


State 42

   65 term: STRINGLITERAL •

    $default  reduce using rule 65 (term)


State 43

   66 term: TRUE •

    $default  reduce using rule 66 (term)


State 44

    8 varDecl: name COLON type ASSIGN exp •
   44 exp: exp • DASH exp
   45    | exp • CROSS exp
   46    | exp • STAR exp
   47    | exp • SLASH exp
   48    | exp • AND exp
   49    | exp • OR exp
   50    | exp • EQUALS exp
   51    | exp • NOTEQUALS exp
   52    | exp • GREATER exp
   53    | exp • GREATEREQ exp
   54    | exp • LESS exp
   55    | exp • LESSEQ exp

    AND        shift, and go to state 59
    DASH       shift, and go to state 60
    EQUALS     shift, and go to state 61
    GREATER    shift, and go to state 62
    GREATEREQ  shift, and go to state 63
    LESS       shift, and go to state 64
    LESSEQ     shift, and go to state 65
    NOTEQUALS  shift, and go to state 66
    OR         shift, and go to state 67
    CROSS      shift, and go to state 68
    SLASH      shift, and go to state 69
    STAR       shift, and go to state 70

    $default  reduce using rule 8 (varDecl)


State 45

   70 term: callExp •

    $default  reduce using rule 70 (term)


State 46

   58 exp: term •

    $default  reduce using rule 58 (exp)


State 47

   59 callExp: loc • LPAREN RPAREN
   60        | loc • LPAREN actualList RPAREN
   63 term: loc •
   72 loc: loc • ARROW name

    ARROW   shift, and go to state 71
    LPAREN  shift, and go to state 72

    $default  reduce using rule 63 (term)


State 48

   71 loc: name •

    $default  reduce using rule 71 (loc)


State 49

   18 classTypeDecl: name COLON CUSTOM LCURLY classBody RCURLY • SEMICOL

    SEMICOL  shift, and go to state 73


State 50

   19 classBody: classBody varDecl • SEMICOL

    SEMICOL  shift, and go to state 74


State 51

   20 classBody: classBody fnDecl •

    $default  reduce using rule 20 (classBody)


State 52

    7 varDecl: name • COLON type
    8        | name • COLON type ASSIGN exp
   22 fnDecl: name • COLON LPAREN maybeFormals RPAREN ARROW type LCURLY stmtList RCURLY

    COLON  shift, and go to state 75


State 53

   22 fnDecl: name COLON LPAREN maybeFormals RPAREN ARROW • type LCURLY stmtList RCURLY

    BOOL       shift, and go to state 12
    ID         shift, and go to state 4
    INT        shift, and go to state 14
    IMMUTABLE  shift, and go to state 15
    REF        shift, and go to state 17
    VOID       shift, and go to state 18

    type      go to state 76
    datatype  go to state 20
    primType  go to state 21
    name      go to state 22


State 54

   26 formalList: formalList COMMA formalDecl •

    $default  reduce using rule 26 (formalList)


State 55

   27 formalDecl: name COLON type •

    $default  reduce using rule 27 (formalDecl)


State 56

   57 exp: DASH term •

    $default  reduce using rule 57 (exp)


State 57

   44 exp: exp • DASH exp
   45    | exp • CROSS exp
   46    | exp • STAR exp
   47    | exp • SLASH exp
   48    | exp • AND exp
   49    | exp • OR exp
   50    | exp • EQUALS exp
   51    | exp • NOTEQUALS exp
   52    | exp • GREATER exp
   53    | exp • GREATEREQ exp
   54    | exp • LESS exp
   55    | exp • LESSEQ exp
   69 term: LPAREN exp • RPAREN

    AND        shift, and go to state 59
    DASH       shift, and go to state 60
    EQUALS     shift, and go to state 61
    GREATER    shift, and go to state 62
    GREATEREQ  shift, and go to state 63
    LESS       shift, and go to state 64
    LESSEQ     shift, and go to state 65
    NOTEQUALS  shift, and go to state 66
    OR         shift, and go to state 67
    CROSS      shift, and go to state 68
    RPAREN     shift, and go to state 77
    SLASH      shift, and go to state 69
    STAR       shift, and go to state 70


State 58

   44 exp: exp • DASH exp
   45    | exp • CROSS exp
   46    | exp • STAR exp
   47    | exp • SLASH exp
   48    | exp • AND exp
   49    | exp • OR exp
   50    | exp • EQUALS exp
   51    | exp • NOTEQUALS exp
   52    | exp • GREATER exp
   53    | exp • GREATEREQ exp
   54    | exp • LESS exp
   55    | exp • LESSEQ exp
   56    | NOT exp •

    $default  reduce using rule 56 (exp)


State 59

   48 exp: exp AND • exp

    DASH           shift, and go to state 36
    EH             shift, and go to state 37
    FALSE          shift, and go to state 38
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 39
    LPAREN         shift, and go to state 40
    NOT            shift, and go to state 41
    STRINGLITERAL  shift, and go to state 42
    TRUE           shift, and go to state 43

    exp      go to state 78
    callExp  go to state 45
    term     go to state 46
    loc      go to state 47
    name     go to state 48


State 60

   44 exp: exp DASH • exp

    DASH           shift, and go to state 36
    EH             shift, and go to state 37
    FALSE          shift, and go to state 38
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 39
    LPAREN         shift, and go to state 40
    NOT            shift, and go to state 41
    STRINGLITERAL  shift, and go to state 42
    TRUE           shift, and go to state 43

    exp      go to state 79
    callExp  go to state 45
    term     go to state 46
    loc      go to state 47
    name     go to state 48


State 61

   50 exp: exp EQUALS • exp

    DASH           shift, and go to state 36
    EH             shift, and go to state 37
    FALSE          shift, and go to state 38
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 39
    LPAREN         shift, and go to state 40
    NOT            shift, and go to state 41
    STRINGLITERAL  shift, and go to state 42
    TRUE           shift, and go to state 43

    exp      go to state 80
    callExp  go to state 45
    term     go to state 46
    loc      go to state 47
    name     go to state 48


State 62

   52 exp: exp GREATER • exp

    DASH           shift, and go to state 36
    EH             shift, and go to state 37
    FALSE          shift, and go to state 38
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 39
    LPAREN         shift, and go to state 40
    NOT            shift, and go to state 41
    STRINGLITERAL  shift, and go to state 42
    TRUE           shift, and go to state 43

    exp      go to state 81
    callExp  go to state 45
    term     go to state 46
    loc      go to state 47
    name     go to state 48


State 63

   53 exp: exp GREATEREQ • exp

    DASH           shift, and go to state 36
    EH             shift, and go to state 37
    FALSE          shift, and go to state 38
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 39
    LPAREN         shift, and go to state 40
    NOT            shift, and go to state 41
    STRINGLITERAL  shift, and go to state 42
    TRUE           shift, and go to state 43

    exp      go to state 82
    callExp  go to state 45
    term     go to state 46
    loc      go to state 47
    name     go to state 48


State 64

   54 exp: exp LESS • exp

    DASH           shift, and go to state 36
    EH             shift, and go to state 37
    FALSE          shift, and go to state 38
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 39
    LPAREN         shift, and go to state 40
    NOT            shift, and go to state 41
    STRINGLITERAL  shift, and go to state 42
    TRUE           shift, and go to state 43

    exp      go to state 83
    callExp  go to state 45
    term     go to state 46
    loc      go to state 47
    name     go to state 48


State 65

   55 exp: exp LESSEQ • exp

    DASH           shift, and go to state 36
    EH             shift, and go to state 37
    FALSE          shift, and go to state 38
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 39
    LPAREN         shift, and go to state 40
    NOT            shift, and go to state 41
    STRINGLITERAL  shift, and go to state 42
    TRUE           shift, and go to state 43

    exp      go to state 84
    callExp  go to state 45
    term     go to state 46
    loc      go to state 47
    name     go to state 48


State 66

   51 exp: exp NOTEQUALS • exp

    DASH           shift, and go to state 36
    EH             shift, and go to state 37
    FALSE          shift, and go to state 38
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 39
    LPAREN         shift, and go to state 40
    NOT            shift, and go to state 41
    STRINGLITERAL  shift, and go to state 42
    TRUE           shift, and go to state 43

    exp      go to state 85
    callExp  go to state 45
    term     go to state 46
    loc      go to state 47
    name     go to state 48


State 67

   49 exp: exp OR • exp

    DASH           shift, and go to state 36
    EH             shift, and go to state 37
    FALSE          shift, and go to state 38
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 39
    LPAREN         shift, and go to state 40
    NOT            shift, and go to state 41
    STRINGLITERAL  shift, and go to state 42
    TRUE           shift, and go to state 43

    exp      go to state 86
    callExp  go to state 45
    term     go to state 46
    loc      go to state 47
    name     go to state 48


State 68

   45 exp: exp CROSS • exp

    DASH           shift, and go to state 36
    EH             shift, and go to state 37
    FALSE          shift, and go to state 38
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 39
    LPAREN         shift, and go to state 40
    NOT            shift, and go to state 41
    STRINGLITERAL  shift, and go to state 42
    TRUE           shift, and go to state 43

    exp      go to state 87
    callExp  go to state 45
    term     go to state 46
    loc      go to state 47
    name     go to state 48


State 69

   47 exp: exp SLASH • exp

    DASH           shift, and go to state 36
    EH             shift, and go to state 37
    FALSE          shift, and go to state 38
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 39
    LPAREN         shift, and go to state 40
    NOT            shift, and go to state 41
    STRINGLITERAL  shift, and go to state 42
    TRUE           shift, and go to state 43

    exp      go to state 88
    callExp  go to state 45
    term     go to state 46
    loc      go to state 47
    name     go to state 48


State 70

   46 exp: exp STAR • exp

    DASH           shift, and go to state 36
    EH             shift, and go to state 37
    FALSE          shift, and go to state 38
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 39
    LPAREN         shift, and go to state 40
    NOT            shift, and go to state 41
    STRINGLITERAL  shift, and go to state 42
    TRUE           shift, and go to state 43

    exp      go to state 89
    callExp  go to state 45
    term     go to state 46
    loc      go to state 47
    name     go to state 48


State 71

   72 loc: loc ARROW • name

    ID  shift, and go to state 4

    name  go to state 90


State 72

   59 callExp: loc LPAREN • RPAREN
   60        | loc LPAREN • actualList RPAREN

    DASH           shift, and go to state 36
    EH             shift, and go to state 37
    FALSE          shift, and go to state 38
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 39
    LPAREN         shift, and go to state 40
    NOT            shift, and go to state 41
    RPAREN         shift, and go to state 91
    STRINGLITERAL  shift, and go to state 42
    TRUE           shift, and go to state 43

    exp         go to state 92
    callExp     go to state 45
    actualList  go to state 93
    term        go to state 46
    loc         go to state 47
    name        go to state 48


State 73

   18 classTypeDecl: name COLON CUSTOM LCURLY classBody RCURLY SEMICOL •

    $default  reduce using rule 18 (classTypeDecl)


State 74

   19 classBody: classBody varDecl SEMICOL •

    $default  reduce using rule 19 (classBody)


State 75

    7 varDecl: name COLON • type
    8        | name COLON • type ASSIGN exp
   22 fnDecl: name COLON • LPAREN maybeFormals RPAREN ARROW type LCURLY stmtList RCURLY

    BOOL       shift, and go to state 12
    ID         shift, and go to state 4
    INT        shift, and go to state 14
    IMMUTABLE  shift, and go to state 15
    LPAREN     shift, and go to state 16
    REF        shift, and go to state 17
    VOID       shift, and go to state 18

    type      go to state 19
    datatype  go to state 20
    primType  go to state 21
    name      go to state 22


State 76

   22 fnDecl: name COLON LPAREN maybeFormals RPAREN ARROW type • LCURLY stmtList RCURLY

    LCURLY  shift, and go to state 94


State 77

   69 term: LPAREN exp RPAREN •

    $default  reduce using rule 69 (term)


State 78

   44 exp: exp • DASH exp
   45    | exp • CROSS exp
   46    | exp • STAR exp
   47    | exp • SLASH exp
   48    | exp • AND exp
   48    | exp AND exp •
   49    | exp • OR exp
   50    | exp • EQUALS exp
   51    | exp • NOTEQUALS exp
   52    | exp • GREATER exp
   53    | exp • GREATEREQ exp
   54    | exp • LESS exp
   55    | exp • LESSEQ exp

    DASH       shift, and go to state 60
    EQUALS     shift, and go to state 61
    GREATER    shift, and go to state 62
    GREATEREQ  shift, and go to state 63
    LESS       shift, and go to state 64
    LESSEQ     shift, and go to state 65
    NOTEQUALS  shift, and go to state 66
    CROSS      shift, and go to state 68
    SLASH      shift, and go to state 69
    STAR       shift, and go to state 70

    $default  reduce using rule 48 (exp)


State 79

   44 exp: exp • DASH exp
   44    | exp DASH exp •
   45    | exp • CROSS exp
   46    | exp • STAR exp
   47    | exp • SLASH exp
   48    | exp • AND exp
   49    | exp • OR exp
   50    | exp • EQUALS exp
   51    | exp • NOTEQUALS exp
   52    | exp • GREATER exp
   53    | exp • GREATEREQ exp
   54    | exp • LESS exp
   55    | exp • LESSEQ exp

    SLASH  shift, and go to state 69
    STAR   shift, and go to state 70

    $default  reduce using rule 44 (exp)


State 80

   44 exp: exp • DASH exp
   45    | exp • CROSS exp
   46    | exp • STAR exp
   47    | exp • SLASH exp
   48    | exp • AND exp
   49    | exp • OR exp
   50    | exp • EQUALS exp
   50    | exp EQUALS exp •
   51    | exp • NOTEQUALS exp
   52    | exp • GREATER exp
   53    | exp • GREATEREQ exp
   54    | exp • LESS exp
   55    | exp • LESSEQ exp

    DASH   shift, and go to state 60
    CROSS  shift, and go to state 68
    SLASH  shift, and go to state 69
    STAR   shift, and go to state 70

    EQUALS     error (nonassociative)
    GREATER    error (nonassociative)
    GREATEREQ  error (nonassociative)
    LESS       error (nonassociative)
    LESSEQ     error (nonassociative)
    NOTEQUALS  error (nonassociative)

    $default  reduce using rule 50 (exp)


State 81

   44 exp: exp • DASH exp
   45    | exp • CROSS exp
   46    | exp • STAR exp
   47    | exp • SLASH exp
   48    | exp • AND exp
   49    | exp • OR exp
   50    | exp • EQUALS exp
   51    | exp • NOTEQUALS exp
   52    | exp • GREATER exp
   52    | exp GREATER exp •
   53    | exp • GREATEREQ exp
   54    | exp • LESS exp
   55    | exp • LESSEQ exp

    DASH   shift, and go to state 60
    CROSS  shift, and go to state 68
    SLASH  shift, and go to state 69
    STAR   shift, and go to state 70

    EQUALS     error (nonassociative)
    GREATER    error (nonassociative)
    GREATEREQ  error (nonassociative)
    LESS       error (nonassociative)
    LESSEQ     error (nonassociative)
    NOTEQUALS  error (nonassociative)

    $default  reduce using rule 52 (exp)


State 82

   44 exp: exp • DASH exp
   45    | exp • CROSS exp
   46    | exp • STAR exp
   47    | exp • SLASH exp
   48    | exp • AND exp
   49    | exp • OR exp
   50    | exp • EQUALS exp
   51    | exp • NOTEQUALS exp
   52    | exp • GREATER exp
   53    | exp • GREATEREQ exp
   53    | exp GREATEREQ exp •
   54    | exp • LESS exp
   55    | exp • LESSEQ exp

    DASH   shift, and go to state 60
    CROSS  shift, and go to state 68
    SLASH  shift, and go to state 69
    STAR   shift, and go to state 70

    EQUALS     error (nonassociative)
    GREATER    error (nonassociative)
    GREATEREQ  error (nonassociative)
    LESS       error (nonassociative)
    LESSEQ     error (nonassociative)
    NOTEQUALS  error (nonassociative)

    $default  reduce using rule 53 (exp)


State 83

   44 exp: exp • DASH exp
   45    | exp • CROSS exp
   46    | exp • STAR exp
   47    | exp • SLASH exp
   48    | exp • AND exp
   49    | exp • OR exp
   50    | exp • EQUALS exp
   51    | exp • NOTEQUALS exp
   52    | exp • GREATER exp
   53    | exp • GREATEREQ exp
   54    | exp • LESS exp
   54    | exp LESS exp •
   55    | exp • LESSEQ exp

    DASH   shift, and go to state 60
    CROSS  shift, and go to state 68
    SLASH  shift, and go to state 69
    STAR   shift, and go to state 70

    EQUALS     error (nonassociative)
    GREATER    error (nonassociative)
    GREATEREQ  error (nonassociative)
    LESS       error (nonassociative)
    LESSEQ     error (nonassociative)
    NOTEQUALS  error (nonassociative)

    $default  reduce using rule 54 (exp)


State 84

   44 exp: exp • DASH exp
   45    | exp • CROSS exp
   46    | exp • STAR exp
   47    | exp • SLASH exp
   48    | exp • AND exp
   49    | exp • OR exp
   50    | exp • EQUALS exp
   51    | exp • NOTEQUALS exp
   52    | exp • GREATER exp
   53    | exp • GREATEREQ exp
   54    | exp • LESS exp
   55    | exp • LESSEQ exp
   55    | exp LESSEQ exp •

    DASH   shift, and go to state 60
    CROSS  shift, and go to state 68
    SLASH  shift, and go to state 69
    STAR   shift, and go to state 70

    EQUALS     error (nonassociative)
    GREATER    error (nonassociative)
    GREATEREQ  error (nonassociative)
    LESS       error (nonassociative)
    LESSEQ     error (nonassociative)
    NOTEQUALS  error (nonassociative)

    $default  reduce using rule 55 (exp)


State 85

   44 exp: exp • DASH exp
   45    | exp • CROSS exp
   46    | exp • STAR exp
   47    | exp • SLASH exp
   48    | exp • AND exp
   49    | exp • OR exp
   50    | exp • EQUALS exp
   51    | exp • NOTEQUALS exp
   51    | exp NOTEQUALS exp •
   52    | exp • GREATER exp
   53    | exp • GREATEREQ exp
   54    | exp • LESS exp
   55    | exp • LESSEQ exp

    DASH   shift, and go to state 60
    CROSS  shift, and go to state 68
    SLASH  shift, and go to state 69
    STAR   shift, and go to state 70

    EQUALS     error (nonassociative)
    GREATER    error (nonassociative)
    GREATEREQ  error (nonassociative)
    LESS       error (nonassociative)
    LESSEQ     error (nonassociative)
    NOTEQUALS  error (nonassociative)

    $default  reduce using rule 51 (exp)


State 86

   44 exp: exp • DASH exp
   45    | exp • CROSS exp
   46    | exp • STAR exp
   47    | exp • SLASH exp
   48    | exp • AND exp
   49    | exp • OR exp
   49    | exp OR exp •
   50    | exp • EQUALS exp
   51    | exp • NOTEQUALS exp
   52    | exp • GREATER exp
   53    | exp • GREATEREQ exp
   54    | exp • LESS exp
   55    | exp • LESSEQ exp

    AND        shift, and go to state 59
    DASH       shift, and go to state 60
    EQUALS     shift, and go to state 61
    GREATER    shift, and go to state 62
    GREATEREQ  shift, and go to state 63
    LESS       shift, and go to state 64
    LESSEQ     shift, and go to state 65
    NOTEQUALS  shift, and go to state 66
    CROSS      shift, and go to state 68
    SLASH      shift, and go to state 69
    STAR       shift, and go to state 70

    $default  reduce using rule 49 (exp)


State 87

   44 exp: exp • DASH exp
   45    | exp • CROSS exp
   45    | exp CROSS exp •
   46    | exp • STAR exp
   47    | exp • SLASH exp
   48    | exp • AND exp
   49    | exp • OR exp
   50    | exp • EQUALS exp
   51    | exp • NOTEQUALS exp
   52    | exp • GREATER exp
   53    | exp • GREATEREQ exp
   54    | exp • LESS exp
   55    | exp • LESSEQ exp

    SLASH  shift, and go to state 69
    STAR   shift, and go to state 70

    $default  reduce using rule 45 (exp)


State 88

   44 exp: exp • DASH exp
   45    | exp • CROSS exp
   46    | exp • STAR exp
   47    | exp • SLASH exp
   47    | exp SLASH exp •
   48    | exp • AND exp
   49    | exp • OR exp
   50    | exp • EQUALS exp
   51    | exp • NOTEQUALS exp
   52    | exp • GREATER exp
   53    | exp • GREATEREQ exp
   54    | exp • LESS exp
   55    | exp • LESSEQ exp

    $default  reduce using rule 47 (exp)


State 89

   44 exp: exp • DASH exp
   45    | exp • CROSS exp
   46    | exp • STAR exp
   46    | exp STAR exp •
   47    | exp • SLASH exp
   48    | exp • AND exp
   49    | exp • OR exp
   50    | exp • EQUALS exp
   51    | exp • NOTEQUALS exp
   52    | exp • GREATER exp
   53    | exp • GREATEREQ exp
   54    | exp • LESS exp
   55    | exp • LESSEQ exp

    $default  reduce using rule 46 (exp)


State 90

   72 loc: loc ARROW name •

    $default  reduce using rule 72 (loc)


State 91

   59 callExp: loc LPAREN RPAREN •

    $default  reduce using rule 59 (callExp)


State 92

   44 exp: exp • DASH exp
   45    | exp • CROSS exp
   46    | exp • STAR exp
   47    | exp • SLASH exp
   48    | exp • AND exp
   49    | exp • OR exp
   50    | exp • EQUALS exp
   51    | exp • NOTEQUALS exp
   52    | exp • GREATER exp
   53    | exp • GREATEREQ exp
   54    | exp • LESS exp
   55    | exp • LESSEQ exp
   61 actualList: exp •

    AND        shift, and go to state 59
    DASH       shift, and go to state 60
    EQUALS     shift, and go to state 61
    GREATER    shift, and go to state 62
    GREATEREQ  shift, and go to state 63
    LESS       shift, and go to state 64
    LESSEQ     shift, and go to state 65
    NOTEQUALS  shift, and go to state 66
    OR         shift, and go to state 67
    CROSS      shift, and go to state 68
    SLASH      shift, and go to state 69
    STAR       shift, and go to state 70

    $default  reduce using rule 61 (actualList)


State 93

   60 callExp: loc LPAREN actualList • RPAREN
   62 actualList: actualList • COMMA exp

    COMMA   shift, and go to state 95
    RPAREN  shift, and go to state 96


State 94

   22 fnDecl: name COLON LPAREN maybeFormals RPAREN ARROW type LCURLY • stmtList RCURLY

    $default  reduce using rule 28 (stmtList)

    stmtList  go to state 97


State 95

   62 actualList: actualList COMMA • exp

    DASH           shift, and go to state 36
    EH             shift, and go to state 37
    FALSE          shift, and go to state 38
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 39
    LPAREN         shift, and go to state 40
    NOT            shift, and go to state 41
    STRINGLITERAL  shift, and go to state 42
    TRUE           shift, and go to state 43

    exp      go to state 98
    callExp  go to state 45
    term     go to state 46
    loc      go to state 47
    name     go to state 48


State 96

   60 callExp: loc LPAREN actualList RPAREN •

    $default  reduce using rule 60 (callExp)


State 97

   22 fnDecl: name COLON LPAREN maybeFormals RPAREN ARROW type LCURLY stmtList • RCURLY
   29 stmtList: stmtList • stmt SEMICOL
   30         | stmtList • blockStmt

    FROMCONSOLE  shift, and go to state 99
    ID           shift, and go to state 4
    IF           shift, and go to state 100
    MAYBE        shift, and go to state 101
    RETURN       shift, and go to state 102
    RCURLY       shift, and go to state 103
    TOCONSOLE    shift, and go to state 104
    WHILE        shift, and go to state 105

    varDecl    go to state 106
    blockStmt  go to state 107
    stmt       go to state 108
    callExp    go to state 109
    loc        go to state 110
    name       go to state 111


State 98

   44 exp: exp • DASH exp
   45    | exp • CROSS exp
   46    | exp • STAR exp
   47    | exp • SLASH exp
   48    | exp • AND exp
   49    | exp • OR exp
   50    | exp • EQUALS exp
   51    | exp • NOTEQUALS exp
   52    | exp • GREATER exp
   53    | exp • GREATEREQ exp
   54    | exp • LESS exp
   55    | exp • LESSEQ exp
   62 actualList: actualList COMMA exp •

    AND        shift, and go to state 59
    DASH       shift, and go to state 60
    EQUALS     shift, and go to state 61
    GREATER    shift, and go to state 62
    GREATEREQ  shift, and go to state 63
    LESS       shift, and go to state 64
    LESSEQ     shift, and go to state 65
    NOTEQUALS  shift, and go to state 66
    OR         shift, and go to state 67
    CROSS      shift, and go to state 68
    SLASH      shift, and go to state 69
    STAR       shift, and go to state 70

    $default  reduce using rule 62 (actualList)


State 99

   40 stmt: FROMCONSOLE • loc

    ID  shift, and go to state 4

    loc   go to state 112
    name  go to state 48


State 100

   32 blockStmt: IF • LPAREN exp RPAREN LCURLY stmtList RCURLY
   33          | IF • LPAREN exp RPAREN LCURLY stmtList RCURLY ELSE LCURLY stmtList RCURLY

    LPAREN  shift, and go to state 113


State 101

   41 stmt: MAYBE • exp MEANS exp OTHERWISE exp

    DASH           shift, and go to state 36
    EH             shift, and go to state 37
    FALSE          shift, and go to state 38
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 39
    LPAREN         shift, and go to state 40
    NOT            shift, and go to state 41
    STRINGLITERAL  shift, and go to state 42
    TRUE           shift, and go to state 43

    exp      go to state 114
    callExp  go to state 45
    term     go to state 46
    loc      go to state 47
    name     go to state 48


State 102

   42 stmt: RETURN • exp
   43     | RETURN •

    DASH           shift, and go to state 36
    EH             shift, and go to state 37
    FALSE          shift, and go to state 38
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 39
    LPAREN         shift, and go to state 40
    NOT            shift, and go to state 41
    STRINGLITERAL  shift, and go to state 42
    TRUE           shift, and go to state 43

    $default  reduce using rule 43 (stmt)

    exp      go to state 115
    callExp  go to state 45
    term     go to state 46
    loc      go to state 47
    name     go to state 48


State 103

   22 fnDecl: name COLON LPAREN maybeFormals RPAREN ARROW type LCURLY stmtList RCURLY •

    $default  reduce using rule 22 (fnDecl)


State 104

   39 stmt: TOCONSOLE • exp

    DASH           shift, and go to state 36
    EH             shift, and go to state 37
    FALSE          shift, and go to state 38
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 39
    LPAREN         shift, and go to state 40
    NOT            shift, and go to state 41
    STRINGLITERAL  shift, and go to state 42
    TRUE           shift, and go to state 43

    exp      go to state 116
    callExp  go to state 45
    term     go to state 46
    loc      go to state 47
    name     go to state 48


State 105

   31 blockStmt: WHILE • LPAREN exp RPAREN LCURLY stmtList RCURLY

    LPAREN  shift, and go to state 117


State 106

   34 stmt: varDecl •

    $default  reduce using rule 34 (stmt)


State 107

   30 stmtList: stmtList blockStmt •

    $default  reduce using rule 30 (stmtList)


State 108

   29 stmtList: stmtList stmt • SEMICOL

    SEMICOL  shift, and go to state 118


State 109

   36 stmt: callExp •

    $default  reduce using rule 36 (stmt)


State 110

   35 stmt: loc • ASSIGN exp
   37     | loc • POSTDEC
   38     | loc • POSTINC
   59 callExp: loc • LPAREN RPAREN
   60        | loc • LPAREN actualList RPAREN
   72 loc: loc • ARROW name

    ASSIGN   shift, and go to state 119
    ARROW    shift, and go to state 71
    LPAREN   shift, and go to state 72
    POSTDEC  shift, and go to state 120
    POSTINC  shift, and go to state 121


State 111

    7 varDecl: name • COLON type
    8        | name • COLON type ASSIGN exp
   71 loc: name •

    COLON  shift, and go to state 122

    $default  reduce using rule 71 (loc)


State 112

   40 stmt: FROMCONSOLE loc •
   72 loc: loc • ARROW name

    ARROW  shift, and go to state 71

    $default  reduce using rule 40 (stmt)


State 113

   32 blockStmt: IF LPAREN • exp RPAREN LCURLY stmtList RCURLY
   33          | IF LPAREN • exp RPAREN LCURLY stmtList RCURLY ELSE LCURLY stmtList RCURLY

    DASH           shift, and go to state 36
    EH             shift, and go to state 37
    FALSE          shift, and go to state 38
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 39
    LPAREN         shift, and go to state 40
    NOT            shift, and go to state 41
    STRINGLITERAL  shift, and go to state 42
    TRUE           shift, and go to state 43

    exp      go to state 123
    callExp  go to state 45
    term     go to state 46
    loc      go to state 47
    name     go to state 48


State 114

   41 stmt: MAYBE exp • MEANS exp OTHERWISE exp
   44 exp: exp • DASH exp
   45    | exp • CROSS exp
   46    | exp • STAR exp
   47    | exp • SLASH exp
   48    | exp • AND exp
   49    | exp • OR exp
   50    | exp • EQUALS exp
   51    | exp • NOTEQUALS exp
   52    | exp • GREATER exp
   53    | exp • GREATEREQ exp
   54    | exp • LESS exp
   55    | exp • LESSEQ exp

    AND        shift, and go to state 59
    DASH       shift, and go to state 60
    EQUALS     shift, and go to state 61
    GREATER    shift, and go to state 62
    GREATEREQ  shift, and go to state 63
    LESS       shift, and go to state 64
    LESSEQ     shift, and go to state 65
    MEANS      shift, and go to state 124
    NOTEQUALS  shift, and go to state 66
    OR         shift, and go to state 67
    CROSS      shift, and go to state 68
    SLASH      shift, and go to state 69
    STAR       shift, and go to state 70


State 115

   42 stmt: RETURN exp •
   44 exp: exp • DASH exp
   45    | exp • CROSS exp
   46    | exp • STAR exp
   47    | exp • SLASH exp
   48    | exp • AND exp
   49    | exp • OR exp
   50    | exp • EQUALS exp
   51    | exp • NOTEQUALS exp
   52    | exp • GREATER exp
   53    | exp • GREATEREQ exp
   54    | exp • LESS exp
   55    | exp • LESSEQ exp

    AND        shift, and go to state 59
    DASH       shift, and go to state 60
    EQUALS     shift, and go to state 61
    GREATER    shift, and go to state 62
    GREATEREQ  shift, and go to state 63
    LESS       shift, and go to state 64
    LESSEQ     shift, and go to state 65
    NOTEQUALS  shift, and go to state 66
    OR         shift, and go to state 67
    CROSS      shift, and go to state 68
    SLASH      shift, and go to state 69
    STAR       shift, and go to state 70

    $default  reduce using rule 42 (stmt)


State 116

   39 stmt: TOCONSOLE exp •
   44 exp: exp • DASH exp
   45    | exp • CROSS exp
   46    | exp • STAR exp
   47    | exp • SLASH exp
   48    | exp • AND exp
   49    | exp • OR exp
   50    | exp • EQUALS exp
   51    | exp • NOTEQUALS exp
   52    | exp • GREATER exp
   53    | exp • GREATEREQ exp
   54    | exp • LESS exp
   55    | exp • LESSEQ exp

    AND        shift, and go to state 59
    DASH       shift, and go to state 60
    EQUALS     shift, and go to state 61
    GREATER    shift, and go to state 62
    GREATEREQ  shift, and go to state 63
    LESS       shift, and go to state 64
    LESSEQ     shift, and go to state 65
    NOTEQUALS  shift, and go to state 66
    OR         shift, and go to state 67
    CROSS      shift, and go to state 68
    SLASH      shift, and go to state 69
    STAR       shift, and go to state 70

    $default  reduce using rule 39 (stmt)


State 117

   31 blockStmt: WHILE LPAREN • exp RPAREN LCURLY stmtList RCURLY

    DASH           shift, and go to state 36
    EH             shift, and go to state 37
    FALSE          shift, and go to state 38
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 39
    LPAREN         shift, and go to state 40
    NOT            shift, and go to state 41
    STRINGLITERAL  shift, and go to state 42
    TRUE           shift, and go to state 43

    exp      go to state 125
    callExp  go to state 45
    term     go to state 46
    loc      go to state 47
    name     go to state 48


State 118

   29 stmtList: stmtList stmt SEMICOL •

    $default  reduce using rule 29 (stmtList)


State 119

   35 stmt: loc ASSIGN • exp

    DASH           shift, and go to state 36
    EH             shift, and go to state 37
    FALSE          shift, and go to state 38
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 39
    LPAREN         shift, and go to state 40
    NOT            shift, and go to state 41
    STRINGLITERAL  shift, and go to state 42
    TRUE           shift, and go to state 43

    exp      go to state 126
    callExp  go to state 45
    term     go to state 46
    loc      go to state 47
    name     go to state 48


State 120

   37 stmt: loc POSTDEC •

    $default  reduce using rule 37 (stmt)


State 121

   38 stmt: loc POSTINC •

    $default  reduce using rule 38 (stmt)


State 122

    7 varDecl: name COLON • type
    8        | name COLON • type ASSIGN exp

    BOOL       shift, and go to state 12
    ID         shift, and go to state 4
    INT        shift, and go to state 14
    IMMUTABLE  shift, and go to state 15
    REF        shift, and go to state 17
    VOID       shift, and go to state 18

    type      go to state 19
    datatype  go to state 20
    primType  go to state 21
    name      go to state 22


State 123

   32 blockStmt: IF LPAREN exp • RPAREN LCURLY stmtList RCURLY
   33          | IF LPAREN exp • RPAREN LCURLY stmtList RCURLY ELSE LCURLY stmtList RCURLY
   44 exp: exp • DASH exp
   45    | exp • CROSS exp
   46    | exp • STAR exp
   47    | exp • SLASH exp
   48    | exp • AND exp
   49    | exp • OR exp
   50    | exp • EQUALS exp
   51    | exp • NOTEQUALS exp
   52    | exp • GREATER exp
   53    | exp • GREATEREQ exp
   54    | exp • LESS exp
   55    | exp • LESSEQ exp

    AND        shift, and go to state 59
    DASH       shift, and go to state 60
    EQUALS     shift, and go to state 61
    GREATER    shift, and go to state 62
    GREATEREQ  shift, and go to state 63
    LESS       shift, and go to state 64
    LESSEQ     shift, and go to state 65
    NOTEQUALS  shift, and go to state 66
    OR         shift, and go to state 67
    CROSS      shift, and go to state 68
    RPAREN     shift, and go to state 127
    SLASH      shift, and go to state 69
    STAR       shift, and go to state 70


State 124

   41 stmt: MAYBE exp MEANS • exp OTHERWISE exp

    DASH           shift, and go to state 36
    EH             shift, and go to state 37
    FALSE          shift, and go to state 38
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 39
    LPAREN         shift, and go to state 40
    NOT            shift, and go to state 41
    STRINGLITERAL  shift, and go to state 42
    TRUE           shift, and go to state 43

    exp      go to state 128
    callExp  go to state 45
    term     go to state 46
    loc      go to state 47
    name     go to state 48


State 125

   31 blockStmt: WHILE LPAREN exp • RPAREN LCURLY stmtList RCURLY
   44 exp: exp • DASH exp
   45    | exp • CROSS exp
   46    | exp • STAR exp
   47    | exp • SLASH exp
   48    | exp • AND exp
   49    | exp • OR exp
   50    | exp • EQUALS exp
   51    | exp • NOTEQUALS exp
   52    | exp • GREATER exp
   53    | exp • GREATEREQ exp
   54    | exp • LESS exp
   55    | exp • LESSEQ exp

    AND        shift, and go to state 59
    DASH       shift, and go to state 60
    EQUALS     shift, and go to state 61
    GREATER    shift, and go to state 62
    GREATEREQ  shift, and go to state 63
    LESS       shift, and go to state 64
    LESSEQ     shift, and go to state 65
    NOTEQUALS  shift, and go to state 66
    OR         shift, and go to state 67
    CROSS      shift, and go to state 68
    RPAREN     shift, and go to state 129
    SLASH      shift, and go to state 69
    STAR       shift, and go to state 70


State 126

   35 stmt: loc ASSIGN exp •
   44 exp: exp • DASH exp
   45    | exp • CROSS exp
   46    | exp • STAR exp
   47    | exp • SLASH exp
   48    | exp • AND exp
   49    | exp • OR exp
   50    | exp • EQUALS exp
   51    | exp • NOTEQUALS exp
   52    | exp • GREATER exp
   53    | exp • GREATEREQ exp
   54    | exp • LESS exp
   55    | exp • LESSEQ exp

    AND        shift, and go to state 59
    DASH       shift, and go to state 60
    EQUALS     shift, and go to state 61
    GREATER    shift, and go to state 62
    GREATEREQ  shift, and go to state 63
    LESS       shift, and go to state 64
    LESSEQ     shift, and go to state 65
    NOTEQUALS  shift, and go to state 66
    OR         shift, and go to state 67
    CROSS      shift, and go to state 68
    SLASH      shift, and go to state 69
    STAR       shift, and go to state 70

    $default  reduce using rule 35 (stmt)


State 127

   32 blockStmt: IF LPAREN exp RPAREN • LCURLY stmtList RCURLY
   33          | IF LPAREN exp RPAREN • LCURLY stmtList RCURLY ELSE LCURLY stmtList RCURLY

    LCURLY  shift, and go to state 130


State 128

   41 stmt: MAYBE exp MEANS exp • OTHERWISE exp
   44 exp: exp • DASH exp
   45    | exp • CROSS exp
   46    | exp • STAR exp
   47    | exp • SLASH exp
   48    | exp • AND exp
   49    | exp • OR exp
   50    | exp • EQUALS exp
   51    | exp • NOTEQUALS exp
   52    | exp • GREATER exp
   53    | exp • GREATEREQ exp
   54    | exp • LESS exp
   55    | exp • LESSEQ exp

    AND        shift, and go to state 59
    DASH       shift, and go to state 60
    EQUALS     shift, and go to state 61
    GREATER    shift, and go to state 62
    GREATEREQ  shift, and go to state 63
    LESS       shift, and go to state 64
    LESSEQ     shift, and go to state 65
    NOTEQUALS  shift, and go to state 66
    OR         shift, and go to state 67
    OTHERWISE  shift, and go to state 131
    CROSS      shift, and go to state 68
    SLASH      shift, and go to state 69
    STAR       shift, and go to state 70


State 129

   31 blockStmt: WHILE LPAREN exp RPAREN • LCURLY stmtList RCURLY

    LCURLY  shift, and go to state 132


State 130

   32 blockStmt: IF LPAREN exp RPAREN LCURLY • stmtList RCURLY
   33          | IF LPAREN exp RPAREN LCURLY • stmtList RCURLY ELSE LCURLY stmtList RCURLY

    $default  reduce using rule 28 (stmtList)

    stmtList  go to state 133


State 131

   41 stmt: MAYBE exp MEANS exp OTHERWISE • exp

    DASH           shift, and go to state 36
    EH             shift, and go to state 37
    FALSE          shift, and go to state 38
    ID             shift, and go to state 4
    INTLITERAL     shift, and go to state 39
    LPAREN         shift, and go to state 40
    NOT            shift, and go to state 41
    STRINGLITERAL  shift, and go to state 42
    TRUE           shift, and go to state 43

    exp      go to state 134
    callExp  go to state 45
    term     go to state 46
    loc      go to state 47
    name     go to state 48


State 132

   31 blockStmt: WHILE LPAREN exp RPAREN LCURLY • stmtList RCURLY

    $default  reduce using rule 28 (stmtList)

    stmtList  go to state 135


State 133

   29 stmtList: stmtList • stmt SEMICOL
   30         | stmtList • blockStmt
   32 blockStmt: IF LPAREN exp RPAREN LCURLY stmtList • RCURLY
   33          | IF LPAREN exp RPAREN LCURLY stmtList • RCURLY ELSE LCURLY stmtList RCURLY

    FROMCONSOLE  shift, and go to state 99
    ID           shift, and go to state 4
    IF           shift, and go to state 100
    MAYBE        shift, and go to state 101
    RETURN       shift, and go to state 102
    RCURLY       shift, and go to state 136
    TOCONSOLE    shift, and go to state 104
    WHILE        shift, and go to state 105

    varDecl    go to state 106
    blockStmt  go to state 107
    stmt       go to state 108
    callExp    go to state 109
    loc        go to state 110
    name       go to state 111


State 134

   41 stmt: MAYBE exp MEANS exp OTHERWISE exp •
   44 exp: exp • DASH exp
   45    | exp • CROSS exp
   46    | exp • STAR exp
   47    | exp • SLASH exp
   48    | exp • AND exp
   49    | exp • OR exp
   50    | exp • EQUALS exp
   51    | exp • NOTEQUALS exp
   52    | exp • GREATER exp
   53    | exp • GREATEREQ exp
   54    | exp • LESS exp
   55    | exp • LESSEQ exp

    AND        shift, and go to state 59
    DASH       shift, and go to state 60
    EQUALS     shift, and go to state 61
    GREATER    shift, and go to state 62
    GREATEREQ  shift, and go to state 63
    LESS       shift, and go to state 64
    LESSEQ     shift, and go to state 65
    NOTEQUALS  shift, and go to state 66
    OR         shift, and go to state 67
    CROSS      shift, and go to state 68
    SLASH      shift, and go to state 69
    STAR       shift, and go to state 70

    $default  reduce using rule 41 (stmt)


State 135

   29 stmtList: stmtList • stmt SEMICOL
   30         | stmtList • blockStmt
   31 blockStmt: WHILE LPAREN exp RPAREN LCURLY stmtList • RCURLY

    FROMCONSOLE  shift, and go to state 99
    ID           shift, and go to state 4
    IF           shift, and go to state 100
    MAYBE        shift, and go to state 101
    RETURN       shift, and go to state 102
    RCURLY       shift, and go to state 137
    TOCONSOLE    shift, and go to state 104
    WHILE        shift, and go to state 105

    varDecl    go to state 106
    blockStmt  go to state 107
    stmt       go to state 108
    callExp    go to state 109
    loc        go to state 110
    name       go to state 111


State 136

   32 blockStmt: IF LPAREN exp RPAREN LCURLY stmtList RCURLY •
   33          | IF LPAREN exp RPAREN LCURLY stmtList RCURLY • ELSE LCURLY stmtList RCURLY

    ELSE  shift, and go to state 138

    $default  reduce using rule 32 (blockStmt)


State 137

   31 blockStmt: WHILE LPAREN exp RPAREN LCURLY stmtList RCURLY •

    $default  reduce using rule 31 (blockStmt)


State 138

   33 blockStmt: IF LPAREN exp RPAREN LCURLY stmtList RCURLY ELSE • LCURLY stmtList RCURLY

    LCURLY  shift, and go to state 139


State 139

   33 blockStmt: IF LPAREN exp RPAREN LCURLY stmtList RCURLY ELSE LCURLY • stmtList RCURLY

    $default  reduce using rule 28 (stmtList)

    stmtList  go to state 140


State 140

   29 stmtList: stmtList • stmt SEMICOL
   30         | stmtList • blockStmt
   33 blockStmt: IF LPAREN exp RPAREN LCURLY stmtList RCURLY ELSE LCURLY stmtList • RCURLY

    FROMCONSOLE  shift, and go to state 99
    ID           shift, and go to state 4
    IF           shift, and go to state 100
    MAYBE        shift, and go to state 101
    RETURN       shift, and go to state 102
    RCURLY       shift, and go to state 141
    TOCONSOLE    shift, and go to state 104
    WHILE        shift, and go to state 105

    varDecl    go to state 106
    blockStmt  go to state 107
    stmt       go to state 108
    callExp    go to state 109
    loc        go to state 110
    name       go to state 111


State 141

   33 blockStmt: IF LPAREN exp RPAREN LCURLY stmtList RCURLY ELSE LCURLY stmtList RCURLY •

    $default  reduce using rule 33 (blockStmt)
